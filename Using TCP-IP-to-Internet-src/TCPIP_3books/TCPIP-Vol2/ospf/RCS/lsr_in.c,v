head	1.4;
access;
symbols;
locks
	dls:1.4; strict;
comment	@ * @;


1.4
date	97.09.21.19.28.38;	author dls;	state Dist;
branches;
next	1.3;

1.3
date	94.02.26.19.50.44;	author dls;	state Works;
branches;
next	1.2;

1.2
date	94.02.20.18.59.56;	author dls;	state Works;
branches;
next	1.1;

1.1
date	94.02.13.19.38.53;	author dls;	state Works;
branches;
next	;


desc
@@


1.4
log
@pre-3e code
@
text
@/* lsr_in.c - lsr_in */

#include <conf.h>
#include <kernel.h>
#include <network.h>
#include <ospf.h>

/*------------------------------------------------------------------------
 *  lsr_in - handle a received link state request packet
 *------------------------------------------------------------------------
 */
int lsr_in(pep)
struct ep	*pep;
{
	struct ip	*pipout, *pip = (struct ip *)pep->ep_data;
	struct ospf	*poout, *po;
	struct ospf_if	*pif = &ospf_if[pep->ep_ifn];
	struct ospf_nb	*pnb;
	struct ospf_lsr	*plsr;
	struct ospf_lsu	*plsu;
	struct ospf_db	*pdb, *db_lookup();
	struct ep	*pepout, *ospflstmpl();
	int		i, nlsr, maxlsapp;

	if (pif->if_state <= IFS_WAITING)
		return;
	pnb = &pif->if_nbtab[1];
	po = (struct ospf *)((char *)pip+IP_HLEN(pip));
	for (i=0; i<MAXNBR; ++i, ++pnb)
		if (pnb->nb_rid == po->ospf_rid)
			break;
	if (i == MAXNBR || pnb->nb_state < NBS_EXCHNG)
		return;
	maxlsapp = (nif[pep->ep_ifn].ni_mtu - IPMHLEN - MINLSULEN);
	maxlsapp /= (LSSHDRLEN + MAXLSDLEN);
	pepout = ospflstmpl(pif);
	if (pepout == 0)
		return;
	pipout = (struct ip *)pepout->ep_data;
	poout = (struct ospf *)pipout->ip_data;
	plsu = (struct ospf_lsu *)poout->ospf_data;
	
	nlsr = (po->ospf_len - MINHDRLEN) / sizeof (struct ospf_lsr);
	plsr = (struct ospf_lsr *)po->ospf_data;
	for (i=0; i<nlsr; ++i, ++plsr) {
		pdb = db_lookup(pif->if_area, plsr->lsr_type,
			plsr->lsr_lsid);
		if (pdb == 0) {
			freebuf(pepout);
			nb_mismatch(pif, pnb);
			return;
		}
		if (plsu->lsu_nads >= maxlsapp) {
			lsa_send(pif, pip->ip_src, pepout);
			if (!(pepout = ospflstmpl(pif)))
				return;
			pipout = (struct ip *)pepout->ep_data;
			poout = (struct ospf *)pipout->ip_data;
			plsu = (struct ospf_lsu *)poout->ospf_data;
		}
		lsa_add(pif, pepout, pdb);
	}
	lsa_send(pif, pip->ip_src, pepout);
}
@


1.3
log
@*** empty log message ***
@
text
@d15 2
a16 2
	struct ip	*pip = (struct ip *)pep->ep_data;
	struct ospf	*po = (struct ospf *)((char *)pip+IP_HLEN(pip));
d20 1
d22 2
a23 1
	int		i, nlsr;
a24 1
kprintf("lsr_in\n");
d28 1
d32 1
a32 1
	if (i == MAXNBR || pnb->nb_state < NBS_XCHNG)
d34 9
a43 1
kprintf("nlsr %d\n", nlsr);
d45 1
a45 1
	for (i=0; i<nlsr; ++nlsr) {
d48 14
a61 3
		if (pdb == 0)
			continue;
/* ???? error when pdb not there? */
d63 1
@


1.2
log
@*** empty log message ***
@
text
@d20 1
a20 1
	struct ospf_db	*pdb;
d36 2
a37 2
		pdb = db_lookup(plsr->lsr_type, plsr->lsr_lsid,
			plsr->lsr_rid);
@


1.1
log
@Initial revision
@
text
@d20 1
d36 5
@
