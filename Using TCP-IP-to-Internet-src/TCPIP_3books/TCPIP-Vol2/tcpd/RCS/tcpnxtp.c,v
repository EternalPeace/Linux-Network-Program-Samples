head	1.2;
access;
symbols;
locks
	dls:1.2; strict;
comment	@ * @;


1.2
date	97.09.21.19.30.11;	author dls;	state Dist;
branches;
next	1.1;

1.1
date	94.01.14.04.11.50;	author dls;	state v2e1;
branches;
next	;


desc
@@


1.2
log
@pre-3e code
@
text
@/* tcpnxtp.c - tcpnxtp */

#include <conf.h>
#include <kernel.h>
#include <network.h>

#define	IPPORT_RESERVED		1024	/* from BSD */

/*------------------------------------------------------------------------
 *  tcpnxtp  -  return the next available TCP local "port" number
 *------------------------------------------------------------------------
 */
short tcpnxtp()
{
	static	u_short	lastport=1;	/* #'s 1-1023 */
	u_short		start;
	int		i;

	wait(tcps_tmutex);
	for (start=lastport++; start != lastport; ++lastport) {
		if (lastport == IPPORT_RESERVED)
			lastport = 1;
		for (i=0; i<Ntcp; ++i)
			if (tcbtab[i].tcb_state != TCPS_FREE &&
					tcbtab[i].tcb_lport == lastport)
				break;
		if (i == Ntcp)
			break;
	}
	if (lastport == start)
		panic("out of TCP ports");
	signal(tcps_tmutex);
	return lastport;
}
@


1.1
log
@Initial revision
@
text
@d15 3
a17 2
	static	short	lastport=1;	/* #'s 1-1023 */
	int		i, start;
@
