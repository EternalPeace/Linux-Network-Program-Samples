#
#  Makefile for example dictionary application (conventional and RPC)
#
all:		dict dict1.o dict2.o rdict rdictd

install:	all
		@echo nothing to install.

clean:
		rm *.o dict rdict rdictd

#
# Original (conventional) application
#
dict:		dict.c
		cc -o dict dict.c

#
# Test division into two parts to see if they compile
#
dict1.o:	dict1.c
		cc -c dict1.c

dict2.o:	dict2.c
		cc -c dict2.c

#
# Dependencies for files generated by rpcgen
#
rdict_clnt.c:	rdict.h rdict.x

rdict_svc.c:	rdict.h rdict.x

rdict_xdr.c:	rdict.h rdict.x

rdict.h:	rdict.x
		rpcgen rdict.x

#
# Link client-side files for RPC version
#
rdict:		rdict_clnt.o rdict_cif.o rdict.o rdict_xdr.o 
		cc -o rdict rdict_clnt.o rdict_cif.o rdict.o \
			rdict_xdr.o -lnsl
		chmod 755 rdict

#
# Link server-side files for RPC version
#
rdictd:		rdict_svc.o rdict_sif.o rdict_srp.o rdict_xdr.o
		cc -o rdictd rdict_svc.o rdict_sif.o rdict_srp.o \
			rdict_xdr.o -lnsl
		chmod 755 rdictd

#
# Individual object file dependencies
#
rdict.o:	rdict.c rdict.h rdict.x
		cc -c rdict.c

rdict_clnt.o:	rdict_clnt.c rdict.h rdict.x
		cc -c rdict_clnt.c

rdict_svc.o:	rdict_svc.c rdict.h rdict.x
		cc -c rdict_svc.c

rdict_xdr.o:	rdict_xdr.c rdict.h rdict.x
		cc -c rdict_xdr.c

rdict_cif.o:	rdict_cif.c rdict.h rdict.x
		cc -c rdict_cif.c

rdict_sif.o:	rdict_sif.c rdict.h rdict.x
		cc -c rdict_sif.c

rdict_srp.o:	rdict_srp.c rdict.h rdict.x
		cc -c rdict_srp.c
