head	1.3;
access;
symbols;
locks
	dls:1.3; strict;
comment	@ * @;


1.3
date	97.09.21.19.28.38;	author dls;	state Dist;
branches;
next	1.2;

1.2
date	94.02.20.18.59.56;	author dls;	state Works;
branches;
next	1.1;

1.1
date	94.02.13.19.38.53;	author dls;	state Works;
branches;
next	;


desc
@@


1.3
log
@pre-3e code
@
text
@/* ddi_exstart.c - ddi_exstart */

#include <conf.h>
#include <kernel.h>
#include <network.h>
#include <ospf.h>

/*------------------------------------------------------------------------
 * ddi_exstart - handle Data Descrip. input for EXSTART state neighbors
 *------------------------------------------------------------------------
 */
int ddi_exstart(pif, pnb, pep)
struct ospf_if	*pif;
struct ospf_nb	*pnb;
struct ep	*pep;
{
	struct ip	*pip = (struct ip *)pep->ep_data;
	struct ospf	*po = (struct ospf *)((char *)pip + IP_HLEN(pip));
	struct ospf_dd	*pdd = (struct ospf_dd *)po->ospf_data;
	struct ep	*peptmp;
	unsigned int	cbits = DDC_INIT | DDC_MORE | DDC_MSTR;

kprintf("ddi_exstart: len %d (need %d) nb_rid > if_rid %d\n",
po->ospf_len, MINDDLEN, net2hl(pnb->nb_rid) > net2hl(pif->if_rid));
	if (((pdd->dd_control & cbits) == cbits) &&
	    po->ospf_len == MINDDLEN &&
	    net2hl(pnb->nb_rid) > net2hl(pif->if_rid)) {
		pnb->nb_master = FALSE;
		pnb->nb_seq = pdd->dd_seq;
		pnb->nb_opts = pdd->dd_opts;
		pnb->nb_state = NBS_EXCHNG;
	} else if (((pdd->dd_control&(DDC_INIT|DDC_MSTR)) == 0) &&
	    pdd->dd_seq == pnb->nb_seq &&
	    net2hl(pnb->nb_rid) < net2hl(pif->if_rid)) {
		pnb->nb_master = TRUE;
		pnb->nb_opts = pdd->dd_opts;
		pnb->nb_state = NBS_EXCHNG;
	} else
		return;
	if (peptmp = (struct ep *)deq(pnb->nb_dsl))
		freebuf(peptmp);
	if (pnb->nb_master)
		pnb->nb_seq++;
	lsr_queue(pif, pnb, pep);
	dd_queue(pif, pnb);
}
@


1.2
log
@*** empty log message ***
@
text
@d20 2
a21 1
	int		cbits = DDC_INIT | DDC_MORE | DDC_MSTR;
d23 2
d27 1
a27 1
	    pnb->nb_rid > pif->if_rid) {
d31 1
a31 1
		pnb->nb_state = NBS_XCHNG;
d34 1
a34 1
	    pnb->nb_rid < pif->if_rid) {
d37 1
a37 1
		pnb->nb_state = NBS_XCHNG;
d40 2
a41 3
kprintf("moving to exchange, is %s master\n", pnb->nb_master ? "" : "not");
	if (pep = (struct ep *)deq(pnb->nb_dsl))
		freebuf(pep);
d44 1
@


1.1
log
@Initial revision
@
text
@d38 1
a38 1
	if (pep = deq(pnb->nb_dsl))
@
