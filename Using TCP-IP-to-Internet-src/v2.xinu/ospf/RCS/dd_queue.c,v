head	1.3;
access;
symbols;
locks
	dls:1.3; strict;
comment	@ * @;


1.3
date	97.09.21.19.28.38;	author dls;	state Dist;
branches;
next	1.2;

1.2
date	94.02.20.18.59.56;	author dls;	state Works;
branches;
next	1.1;

1.1
date	94.02.13.19.38.53;	author dls;	state Works;
branches;
next	;


desc
@@


1.3
log
@pre-3e code
@
text
@/* dd_queue.c - dd_queue */

#include <conf.h>
#include <kernel.h>
#include <network.h>
#include <ospf.h>

/*------------------------------------------------------------------------
 *  dd_queue - generate Data Description packets
 *------------------------------------------------------------------------
 */
int dd_queue(pif, pnb)
struct ospf_if	*pif;
struct ospf_nb	*pnb;
{
	struct	ep	*pep, *ospfddtmpl();
	struct	ip	*pip;
	struct	ospf	*po;
	struct	ospf_dd	*pdd;

	pep = ospfddtmpl(pif);
	if (pep == 0)
		return;
	pip = (struct ip *)pep->ep_data;
	po = (struct ospf *)pip->ip_data;
	pdd = (struct ospf_dd *)po->ospf_data;

	if (pnb->nb_state == NBS_EXSTART) {
		pdd->dd_control = DDC_INIT | DDC_MORE | DDC_MSTR;
		pdd->dd_seq = hl2net(pnb->nb_seq);
		if (enq(pnb->nb_dsl, pep, 0) < 0)
			freebuf(pep);
		dd_xmit(pif, pnb);
		pnb->nb_trexmt = pif->if_rintv;
		return;
	}
	/* else we're in EXCHANGE state */
	lss_build(pif, pnb, pep);
	dd_xmit(pif, pnb);
	if (pnb->nb_master)
		pnb->nb_trexmt = pif->if_rintv;
}
@


1.2
log
@*** empty log message ***
@
text
@d16 1
a16 1
	struct	ep	*pep;
a20 2
kprintf("dd_queue\n");

d23 1
a23 1
		return SYSERR;
d30 1
a30 1
		pdd->dd_seq = pnb->nb_seq;
@


1.1
log
@Initial revision
@
text
@d23 2
a24 2
	pep = (struct ep *)getbuf(Net.netpool);
	if ((int)pep == SYSERR)
a29 1
	ospfddtmpl(pif, pep);
d40 1
a40 1
	lsa_build(pif, pnb, pep);
@
