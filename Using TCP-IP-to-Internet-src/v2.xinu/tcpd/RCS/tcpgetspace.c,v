head	1.2;
access;
symbols;
locks
	dls:1.2; strict;
comment	@ * @;


1.2
date	97.09.21.19.30.11;	author dls;	state Dist;
branches;
next	1.1;

1.1
date	94.01.14.04.11.50;	author dls;	state v2e1;
branches;
next	;


desc
@@


1.2
log
@pre-3e code
@
text
@/* tcpgetspace.c - tcpgetspace */

#include <conf.h>
#include <kernel.h>
#include <proc.h>
#include <network.h>

/*------------------------------------------------------------------------
 *  tcpgetspace  -  wait for space in the send buffer
 *	N.B. - returns with tcb_mutex HELD
 *------------------------------------------------------------------------
 */
int tcpgetspace(ptcb, len)
struct	tcb	*ptcb;
int		len;
{
	if (len > ptcb->tcb_sbsize)
		return TCPE_TOOBIG;	/* we'll never have this much	*/
	while (1) {
		wait(ptcb->tcb_ssema);
		wait(ptcb->tcb_mutex);
		if (ptcb->tcb_state == TCPS_FREE)
			return SYSERR;			/* gone		*/
		if (ptcb->tcb_error) {
			tcpwakeup(WRITERS, ptcb);	/* propagate it */
			signal(ptcb->tcb_mutex);
			return ptcb->tcb_error;
		}
		if (len <= ptcb->tcb_sbsize - ptcb->tcb_sbcount)
			return len;
		signal(ptcb->tcb_mutex);
	}
}
@


1.1
log
@Initial revision
@
text
@@
