EATSPACE	compile.c	/^#define EATSPACE() do {							\\$/
MATCH	process.c	/^#define	MATCH(a)						\\$/
Mmain	main.c	/^main(argc, argv)$/
NEEDSP	process.c	/^#define	NEEDSP(reqlen)							\\$/
OUT	process.c	/^#define OUT(s) { fwrite(s, sizeof(u_char), psl, st/
add_compunit	main.c	/^add_compunit(type, s)$/
add_file	main.c	/^add_file(s)$/
addrchar	compile.c	/^#define	addrchar(c)	(strchr("0123456789\/\\\\$", (/
applies	process.c	/^applies(cp)$/
cfclose	process.c	/^cfclose(cp, end)$/
compile	compile.c	/^compile()$/
compile_addr	compile.c	/^compile_addr(p, a)$/
compile_delimited	compile.c	/^compile_delimited(p, d)$/
compile_flags	compile.c	/^compile_flags(p, s)$/
compile_re	compile.c	/^compile_re(p, repp)$/
compile_stream	compile.c	/^compile_stream(terminator, link, p)$/
compile_subst	compile.c	/^compile_subst(p, s)$/
compile_text	compile.c	/^compile_text()$/
compile_tr	compile.c	/^compile_tr(p, transtab)$/
cspace	process.c	/^cspace(sp, p, len, spflag)$/
cu_fgets	main.c	/^cu_fgets(buf, n)$/
duptoeol	compile.c	/^duptoeol(s, ctype)$/
enterlabel	compile.c	/^enterlabel(cp)$/
err	misc.c	/^err(severity, fmt, va_alist)$/
findlabel	compile.c	/^findlabel(name)$/
fixuplabel	compile.c	/^fixuplabel(cp, end)$/
flush_appends	process.c	/^flush_appends()$/
lputs	process.c	/^lputs(s)$/
mf_fgets	main.c	/^mf_fgets(sp, spflag)$/
process	process.c	/^process()$/
regexec_e	process.c	/^regexec_e(preg, string, eflags, nomatch, slen)$/
regsub	process.c	/^regsub(sp, string, src)$/
strregerror	misc.c	/^strregerror(errcode, preg)$/
substitute	process.c	/^substitute(cp)$/
uselabel	compile.c	/^uselabel()$/
xmalloc	misc.c	/^xmalloc(size)$/
xrealloc	misc.c	/^xrealloc(p, size)$/
