Cat	expand.c	/^Cat(s1, s2)$/
Mmain	main.c	/^main(argc, argv)$/
ack	server.c	/^#define	ack() 	(void) write(rem, "\\0\\n", 2)$/
addpath	expand.c	/^addpath(c)$/
amatch	expand.c	/^amatch(s, p)$/
argcmp	expand.c	/^argcmp(a1, a2)$/
chkparent	server.c	/^chkparent(name)$/
clean	server.c	/^clean(cp)$/
cleanup	server.c	/^cleanup(signo)$/
closeconn	docmd.c	/^closeconn()$/
cmptime	docmd.c	/^cmptime(name)$/
colon	docmd.c	/^colon(cp)$/
comment	server.c	/^comment(s)$/
define	lookup.c	/^define(name)$/
doarrow	docmd.c	/^doarrow(filev, files, rhost, cmds)$/
docmdargs	main.c	/^docmdargs(nargs, args)$/
docmds	docmd.c	/^docmds(dhosts, argc, argv)$/
dodcolon	docmd.c	/^dodcolon(filev, files, stamp, cmds)$/
dospecial	server.c	/^dospecial(cmd)$/
err	server.c	/^#define	err() 	(void) write(rem, "\\1\\n", 2)$/
error	server.c	/^error(fmt, va_alist)$/
except	docmd.c	/^except(file)$/
execbrc	expand.c	/^execbrc(p, s)$/
expand	expand.c	/^expand(list, wh)$/
expsh	expand.c	/^expsh(s)$/
expstr	expand.c	/^expstr(s)$/
exptilde	expand.c	/^exptilde(buf, file)$/
fatal	server.c	/^fatal(fmt, va_alist)$/
fchog	server.c	/^fchog(fd, file, owner, group, mode)$/
hardlink	server.c	/^hardlink(cmd)$/
inlist	docmd.c	/^inlist(list, file)$/
install	server.c	/^install(src, dest, destdir, opts)$/
log	server.c	/^log(fp, fmt, va_alist)$/
lookup	lookup.c	/^lookup(name, action, value)$/
lostconn	docmd.c	/^lostconn(signo)$/
makeconn	docmd.c	/^makeconn(rhost)$/
match	expand.c	/^match(s, p)$/
matchdir	expand.c	/^matchdir(pattern)$/
note	server.c	/^note(fmt, va_alist)$/
notify	docmd.c	/^notify(file, rhost, to, lmod)$/
okname	docmd.c	/^okname(name)$/
prnames	main.c	/^prnames(nl)$/
protogroup	server.c	/^#define protogroup() (gr ? gr->gr_name : group)$/
protoname	server.c	/^#define protoname() (pw ? pw->pw_name : user)$/
query	server.c	/^query(name)$/
rcmptime	docmd.c	/^rcmptime(st)$/
recvf	server.c	/^recvf(cmd, type)$/
removeit	server.c	/^removeit(stp)$/
response	server.c	/^response()$/
rmchk	server.c	/^rmchk(opts)$/
savelink	server.c	/^savelink(stp)$/
sendf	server.c	/^sendf(rname, opts)$/
server	server.c	/^server()$/
smatch	expand.c	/^smatch(s, p)$/
sort	expand.c	/^#define sort()	qsort((char *)sortbase, &eargv[earg/
update	server.c	/^update(rname, opts, stp)$/
usage	main.c	/^usage()$/
warn	main.c	/^warn(fmt, va_alist)$/
