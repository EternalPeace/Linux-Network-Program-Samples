Calloc	alloc.c	/^Calloc(s, n)$/
DESC	csh.c	/^#define DESC(a) (*((int *) (a)) - (didfds && *((in/
DIRAPPEND	csh.c	/^#define DIRAPPEND(a)  \\$/
Dfix	dol.c	/^Dfix(t)$/
Dfix1	dol.c	/^Dfix1(cp)$/
Dfix2	dol.c	/^Dfix2(v)$/
DgetC	dol.c	/^DgetC(flag)$/
Dgetdol	dol.c	/^Dgetdol()$/
Dpack	dol.c	/^Dpack(wbuf, wp)$/
Dredc	dol.c	/^Dredc()$/
Dtestq	dol.c	/^Dtestq(c)$/
Dword	dol.c	/^Dword()$/
FREE_ITEMS	file.c	/^#define FREE_ITEMS(items) { \\$/
Free	alloc.c	/^Free(p)$/
Gcat	glob.c	/^Gcat(s1, s2)$/
Gmatch	glob.c	/^Gmatch(string, pattern)$/
ISDOT	dir.c	/^#define ISDOT(c) (UC(c)[0] == '.' && ((UC(c)[1] ==/
ISDOTDOT	dir.c	/^#define ISDOTDOT(c) (UC(c)[0] == '.' && ISDOT(&((c/
Malloc	alloc.c	/^Malloc(n)$/
Mcsh	csh.c	/^main(argc, argv)$/
P2DIG	time.c	/^#define  P2DIG(i) (void) fprintf(cshout, "%d%d", (/
PF	../../usr.bin/printf/printf.c	/^#define PF(f, func) { \\$/
Realloc	alloc.c	/^Realloc(p, n)$/
Setenv	func.c	/^Setenv(name, val)$/
Unsetenv	func.c	/^Unsetenv(name)$/
addla	lex.c	/^addla(cp)$/
adrof1	set.c	/^adrof1(name, v)$/
alias	parse.c	/^alias(lex)$/
any	misc.c	/^any(s, c)$/
asciicode	../../usr.bin/printf/printf.c	/^asciicode()$/
asx	set.c	/^asx(vp, subscr, p)$/
asyn0	parse.c	/^asyn0(p1, p2)$/
asyn3	parse.c	/^asyn3(p1, p2)$/
asyntax	parse.c	/^asyntax(p1, p2)$/
back_to_col_1	file.c	/^back_to_col_1()$/
backeval	glob.c	/^backeval(cp, literal)$/
balance	set.c	/^balance(p, f, d)$/
beep	file.c	/^beep()$/
bfree	lex.c	/^bfree()$/
bgetc	lex.c	/^bgetc()$/
bis	exec.c	/^#define bis(h, b)	((h)[(b) >> 3] |= 1 << ((b) & 7)/
bit	exec.c	/^#define bit(h, b)	((h)[(b) >> 3] & 1 << ((b) & 7))/
blk2short	str.c	/^blk2short(src)$/
blkcat	misc.c	/^blkcat(up, vp)$/
blkcpy	misc.c	/^blkcpy(oav, bv)$/
blkend	misc.c	/^blkend(up)$/
blkfree	misc.c	/^blkfree(av0)$/
blklen	misc.c	/^blklen(av)$/
blkpr	misc.c	/^blkpr(fp, av)$/
blkspl	misc.c	/^blkspl(up, vp)$/
bseek	lex.c	/^bseek(l)$/
btell	lex.c	/^btell(l)$/
btoeof	lex.c	/^btoeof()$/
catn	file.c	/^catn(des, src, count)$/
chkclob	sem.c	/^chkclob(cp)$/
closef	csh.c	/^closef(oreo)$/
closem	misc.c	/^closem()$/
copyblk	misc.c	/^copyblk(v)$/
copylex	lex.c	/^copylex(hp, fp)$/
copyn	file.c	/^copyn(des, src, count)$/
dcanon	dir.c	/^dcanon(cp, p)$/
dcopy	misc.c	/^dcopy(i, j)$/
defaultpath	csh.c	/^defaultpath()$/
dfind	dir.c	/^dfind(cp)$/
dfollow	dir.c	/^dfollow(cp)$/
dfree	dir.c	/^dfree(dp)$/
dgoto	dir.c	/^dgoto(cp)$/
dinit	dir.c	/^dinit(hp)$/
dmove	misc.c	/^dmove(i, j)$/
dnewcwd	dir.c	/^dnewcwd(dp)$/
dnormalize	dir.c	/^dnormalize(cp)$/
doagain	func.c	/^doagain()$/
doalias	func.c	/^doalias(v, t)$/
dobackp	glob.c	/^dobackp(cp, literal)$/
dobg	proc.c	/^dobg(v, t)$/
dobg1	proc.c	/^dobg1(v, t)$/
dobreak	func.c	/^dobreak(v, t)$/
dochngd	dir.c	/^dochngd(v, t)$/
docontin	func.c	/^docontin(v, t)$/
dodirs	dir.c	/^dodirs(v, t)$/
doecho	func.c	/^doecho(v, t)$/
doelse	func.c	/^doelse(v, t)$/
doend	func.c	/^doend(v, t)$/
doeval	func.c	/^doeval(v, t)$/
doexec	exec.c	/^doexec(v, t)$/
doexit	func.c	/^doexit(v, t)$/
dofg	proc.c	/^dofg(v, t)$/
dofg1	proc.c	/^dofg1(v, t)$/
doforeach	func.c	/^doforeach(v, t)$/
doglob	func.c	/^doglob(v, t)$/
dogoto	func.c	/^dogoto(v, t)$/
dohash	exec.c	/^dohash(v, t)$/
dohist	hist.c	/^dohist(v, t)$/
dohist1	hist.c	/^dohist1(hp, np, rflg, hflg)$/
doif	func.c	/^doif(v, kp)$/
doio	sem.c	/^doio(t, pipein, pipeout)$/
dojobs	proc.c	/^dojobs(v, t)$/
dokill	proc.c	/^dokill(v, t)$/
dolerror	dol.c	/^dolerror(s)$/
dolet	set.c	/^dolet(v, t)$/
dolimit	func.c	/^dolimit(v, t)$/
dologin	func.c	/^dologin(v, t)$/
dologout	func.c	/^dologout(v, t)$/
domod	lex.c	/^domod(cp, type)$/
donefds	misc.c	/^donefds()$/
donice	time.c	/^donice(v, t)$/
donohup	func.c	/^donohup(v, t)$/
donotify	proc.c	/^donotify(v, t)$/
doonintr	func.c	/^doonintr(v, t)$/
dopopd	dir.c	/^dopopd(v, t)$/
doprintf	func.c	/^doprintf(v, t)$/
dopushd	dir.c	/^dopushd(v, t)$/
dorepeat	func.c	/^dorepeat(v, kp)$/
doset	set.c	/^doset(v, t)$/
dosetenv	func.c	/^dosetenv(v, t)$/
dosource	csh.c	/^dosource(v, t)$/
dostop	proc.c	/^dostop(v, t)$/
dosub	lex.c	/^dosub(sc, en, global)$/
dosuspend	func.c	/^dosuspend(v, t)$/
doswbrk	func.c	/^doswbrk(v, t)$/
doswitch	func.c	/^doswitch(v, t)$/
dotime	time.c	/^dotime(v, t)$/
doumask	func.c	/^doumask(v, t)$/
dounhash	exec.c	/^dounhash(v, t)$/
dounlimit	func.c	/^dounlimit(v, t)$/
dounsetenv	func.c	/^dounsetenv(v, t)$/
dowait	proc.c	/^dowait(v, t)$/
dowhich	exec.c	/^dowhich(v, c)$/
dowhile	func.c	/^dowhile(v, t)$/
dozip	func.c	/^dozip(v, t)$/
dset	dir.c	/^dset(dp)$/
dtilde	dir.c	/^dtilde()$/
dtildepr	dir.c	/^dtildepr(home, dir)$/
egetn	exp.c	/^egetn(cp)$/
enthist	hist.c	/^enthist(event, lp, docopy)$/
escape	../../usr.bin/printf/printf.c	/^escape(fmt)$/
etracc	exp.c	/^etracc(str, cp, vp)$/
etraci	exp.c	/^etraci(str, i, vp)$/
evalav	exp.c	/^evalav(v)$/
execash	exec.c	/^execash(t, kp)$/
executable	exec.c	/^executable(dir, name, dir_ok)$/
execute	sem.c	/^execute(t, wanttty, pipein, pipeout)$/
exitstat	csh.c	/^exitstat()$/
exp0	exp.c	/^exp0(vp, ignore)$/
exp1	exp.c	/^exp1(vp, ignore)$/
exp2	exp.c	/^exp2(vp, ignore)$/
exp2a	exp.c	/^exp2a(vp, ignore)$/
exp2b	exp.c	/^exp2b(vp, ignore)$/
exp2c	exp.c	/^exp2c(vp, ignore)$/
exp3	exp.c	/^exp3(vp, ignore)$/
exp3a	exp.c	/^exp3a(vp, ignore)$/
exp4	exp.c	/^exp4(vp, ignore)$/
exp5	exp.c	/^exp5(vp, ignore)$/
exp6	exp.c	/^exp6(vp, ignore)$/
expbrace	glob.c	/^expbrace(nvp, elp, size)$/
exportpath	set.c	/^exportpath(val)$/
expr	exp.c	/^expr(vp)$/
extract_dir_and_name	file.c	/^extract_dir_and_name(path, dir, name)$/
filetype	file.c	/^filetype(dir, file)$/
findev	lex.c	/^findev(cp, anyarg)$/
findlim	func.c	/^findlim(cp)$/
fixDolMod	dol.c	/^fixDolMod()$/
free_items	file.c	/^free_items(items)$/
freelex	lex.c	/^freelex(vp)$/
freenod	parse.c	/^freenod(p1, p2)$/
freesyn	parse.c	/^freesyn(t)$/
func	func.c	/^func(t, bp)$/
getC	lex.c	/^#define getC(f)		((getCtmp = peekc) ? (peekc = 0, /
getC1	lex.c	/^getC1(flag)$/
getchr	../../usr.bin/printf/printf.c	/^getchr()$/
getdol	lex.c	/^getdol()$/
getdouble	../../usr.bin/printf/printf.c	/^getdouble()$/
getentry	file.c	/^getentry(dir_fd, looking_for_lognames)$/
getexcl	lex.c	/^getexcl(sc)$/
gethdir	csh.c	/^gethdir(home)$/
gethent	lex.c	/^gethent(sc)$/
getint	../../usr.bin/printf/printf.c	/^getint(ip)$/
getinx	set.c	/^getinx(cp, ip)$/
getlong	../../usr.bin/printf/printf.c	/^getlong(lp)$/
getn	set.c	/^getn(cp)$/
getsel	lex.c	/^getsel(al, ar, dol)$/
getstr	../../usr.bin/printf/printf.c	/^getstr()$/
getsub	lex.c	/^getsub(en)$/
getval	func.c	/^getval(lp, v)$/
getvx	set.c	/^getvx(vp, subscr)$/
getword	func.c	/^getword(wp)$/
ginit	glob.c	/^ginit()$/
globall	glob.c	/^globall(v)$/
globbrace	glob.c	/^globbrace(s, p, bl)$/
globexpand	glob.c	/^globexpand(v)$/
globone	glob.c	/^globone(str, action)$/
globtilde	glob.c	/^globtilde(nv, s)$/
goodbye	csh.c	/^goodbye()$/
gotolab	func.c	/^gotolab(lab)$/
handleone	glob.c	/^handleone(str, vl, action)$/
hash	exec.c	/^#define hash(a, b)	(((a) * HSHMUL + (b)) & HSHMASK/
hashname	exec.c	/^hashname(cp)$/
hashstat	exec.c	/^hashstat(v, t)$/
heredoc	dol.c	/^heredoc(term)$/
hfree	hist.c	/^hfree(hp)$/
ignored	file.c	/^ignored(entry)$/
importpath	csh.c	/^importpath(cp)$/
initdesc	csh.c	/^initdesc()$/
is_prefix	file.c	/^is_prefix(check, template)$/
is_suffix	file.c	/^is_suffix(check, template)$/
isa	exp.c	/^isa(cp, what)$/
isbfunc	func.c	/^isbfunc(t)$/
iscommand	exec.c	/^iscommand(name)$/
islogin	func.c	/^islogin()$/
keyword	func.c	/^keyword(wp)$/
lastchr	misc.c	/^lastchr(cp)$/
lex	lex.c	/^lex(hp)$/
libglob	glob.c	/^libglob(vl)$/
limtail	func.c	/^limtail(cp, str)$/
lshift	misc.c	/^lshift(v, c)$/
madrof	set.c	/^madrof(pat, vp)$/
mailchk	csh.c	/^mailchk()$/
matchs	lex.c	/^matchs(str, pat)$/
mklong	../../usr.bin/printf/printf.c	/^mklong(str, ch)$/
mypipe	sem.c	/^mypipe(pv)$/
number	misc.c	/^number(cp)$/
okpcntl	proc.c	/^okpcntl()$/
operate	set.c	/^operate(op, vp, p)$/
padd	proc.c	/^padd(t)$/
pads	proc.c	/^pads(cp)$/
palloc	proc.c	/^palloc(pid, t)$/
panystop	proc.c	/^panystop(neednl)$/
pchild	proc.c	/^pchild(notused)$/
pclrcurr	proc.c	/^pclrcurr(pp)$/
pcsecs	time.c	/^pcsecs(l)			\/* PWP: print mm:ss.dd, l is in sec*1/
pdeltat	time.c	/^pdeltat(t1, t0)$/
pendjob	proc.c	/^pendjob()$/
pexerr	exec.c	/^pexerr()$/
pfind	proc.c	/^pfind(cp)$/
pflush	proc.c	/^pflush(pp)$/
pflushall	proc.c	/^pflushall()$/
pfork	proc.c	/^pfork(t, wanttty)$/
pgetcurr	proc.c	/^pgetcurr(pp)$/
pgetty	proc.c	/^pgetty(wanttty, pgrp)$/
phist	hist.c	/^phist(hp, hflg)$/
phup	csh.c	/^phup(sig)$/
pintr	csh.c	/^pintr(notused)$/
pintr1	csh.c	/^pintr1(wantnl)$/
pjwait	proc.c	/^pjwait(pp)$/
pkill	proc.c	/^pkill(v, signum)$/
plim	func.c	/^plim(lp, hard)$/
plist	set.c	/^plist(p)$/
pmatch	glob.c	/^pmatch(string, pattern)$/
pnote	proc.c	/^pnote()$/
pprint	proc.c	/^pprint(pp, flag)$/
prefix	misc.c	/^prefix(sub, str)$/
preread	func.c	/^preread()$/
prestjob	proc.c	/^prestjob()$/
print_by_column	file.c	/^print_by_column(dir, items, count)$/
print_recognized_stuff	file.c	/^print_recognized_stuff(recognized_part)$/
printdirs	dir.c	/^printdirs()$/
printprompt	csh.c	/^printprompt()$/
prlex	lex.c	/^prlex(fp, sp0)$/
process	csh.c	/^process(catch)$/
prusage	time.c	/^prusage(r0, r1, e, b)$/
prvars	func.c	/^prvars()$/
psave	glob.c	/^psave(c)$/
psavejob	proc.c	/^psavejob()$/
psecs	time.c	/^psecs(l)$/
pstart	proc.c	/^pstart(pp, foregnd)$/
ptprint	proc.c	/^ptprint(tp)$/
pushback	file.c	/^pushback(string)$/
putn	set.c	/^putn(n)$/
putn1	set.c	/^putn1(n)$/
pwait	proc.c	/^pwait()$/
pword	glob.c	/^pword()$/
readc	lex.c	/^readc(wanteof)$/
readf	csh.c	/^readf(oreo, buf, siz)$/
rechist	csh.c	/^rechist()$/
recognize	file.c	/^recognize(extended_name, entry, name_length, numit/
reexecute	func.c	/^reexecute(kp)$/
renum	misc.c	/^renum(i, j)$/
retype	file.c	/^retype()$/
rleft	set.c	/^#define rleft(p) (\\$/
rright	set.c	/^#define rright(p) (\\$/
rscan	glob.c	/^rscan(t, f)$/
ruadd	time.c	/^ruadd(ru, ru2)$/
s_strcat	str.c	/^s_strcat(dst, src)$/
s_strchr	str.c	/^s_strchr(str, ch)$/
s_strcmp	str.c	/^s_strcmp(str1, str2)$/
s_strcpy	str.c	/^s_strcpy(dst, src)$/
s_strend	str.c	/^s_strend(cp)$/
s_strlen	str.c	/^s_strlen(str)$/
s_strncat	str.c	/^s_strncat(dst, src, n)$/
s_strncmp	str.c	/^s_strncmp(str1, str2, n)$/
s_strncpy	str.c	/^s_strncpy(dst, src, n)$/
s_strrchr	str.c	/^s_strrchr(str, ch)$/
s_strsave	str.c	/^s_strsave(s)$/
s_strspl	str.c	/^s_strspl(cp, dp)$/
s_strstr	str.c	/^s_strstr(s, t)$/
saveblk	misc.c	/^saveblk(v)$/
savehist	hist.c	/^savehist(sp)$/
search	func.c	/^search(type, level, goal)$/
seekf	csh.c	/^seekf(oreo, off, whence)$/
set	set.c	/^set(var, val)$/
set1	set.c	/^set1(var, vec, head)$/
setDolp	dol.c	/^setDolp(cp)$/
setNS	set.c	/^setNS(cp)$/
seterror	err.c	/^seterror(id, va_alist)$/
setexclp	lex.c	/^setexclp(cp)$/
setlim	func.c	/^setlim(lp, hard, limit)$/
setq	set.c	/^setq(name, vec, p)$/
settell	lex.c	/^settell()$/
settimes	time.c	/^settimes()$/
setup_tty	file.c	/^setup_tty(on)$/
setzero	misc.c	/^setzero(cp, i)$/
shift	set.c	/^shift(v, t)$/
short2blk	str.c	/^short2blk(src)$/
short2qstr	str.c	/^short2qstr(src)$/
short2str	str.c	/^short2str(src)$/
showall	alloc.c	/^showall(v, t)$/
skipargs	dir.c	/^skipargs(v, str)$/
sortscmp	glob.c	/^sortscmp(a, b)$/
splicepipe	sem.c	/^splicepipe(t, cp)$/
srccat	csh.c	/^srccat(cp, dp)$/
srcfile	csh.c	/^srcfile(f, onlyown, flag)$/
srchx	func.c	/^srchx(cp)$/
srcunit	csh.c	/^srcunit(unit, onlyown, hflg)$/
stderror	err.c	/^stderror(id, va_alist)$/
str2short	str.c	/^str2short(src)$/
strend	misc.c	/^strend(cp)$/
strip	misc.c	/^strip(cp)$/
strsave	misc.c	/^strsave(s)$/
strspl	misc.c	/^strspl(cp, dp)$/
strstr	misc.c	/^strstr(s, t)$/
subword	lex.c	/^subword(cp, type, adid)$/
syn0	parse.c	/^syn0(p1, p2, flags)$/
syn1	parse.c	/^syn1(p1, p2, flags)$/
syn1a	parse.c	/^syn1a(p1, p2, flags)$/
syn1b	parse.c	/^syn1b(p1, p2, flags)$/
syn2	parse.c	/^syn2(p1, p2, flags)$/
syn3	parse.c	/^syn3(p1, p2, flags)$/
syntax	parse.c	/^syntax(p1, p2, flags)$/
tellmewhat	exec.c	/^tellmewhat(lex)$/
tenex	file.c	/^tenex(inputline, inputline_size)$/
texec	exec.c	/^texec(sf, st)$/
tglob	glob.c	/^tglob(t)$/
tilde	file.c	/^tilde(new, old)$/
toend	func.c	/^toend()$/
trim	glob.c	/^trim(t)$/
tsearch	file.c	/^tsearch(word, command, max_word_length)$/
tvadd	time.c	/^tvadd(tsum, t0)$/
tvsub	time.c	/^tvsub(tdiff, t1, t0)$/
udvar	misc.c	/^udvar(name)$/
unDgetC	dol.c	/^#define	unDgetC(c)	Dpeekc = c$/
unDredc	dol.c	/^unDredc(c)$/
unalias	func.c	/^unalias(v, t)$/
ungetC	lex.c	/^#define	ungetC(c)	peekc = c$/
ungetD	lex.c	/^#define	ungetD(c)	peekd = c$/
unreadc	lex.c	/^unreadc(c)$/
unset	set.c	/^unset(v, t)$/
unset1	set.c	/^unset1(v, head)$/
unsetv	set.c	/^unsetv(var)$/
unsetv1	set.c	/^unsetv1(p)$/
untty	csh.c	/^untty()$/
usage	../../usr.bin/printf/printf.c	/^usage()$/
value1	set.c	/^value1(var, head)$/
vffree	sem.c	/^vffree(i)$/
vis_fputc	csh.c	/^vis_fputc(ch, fp)$/
vis_str	str.c	/^vis_str(cp)$/
warnx	../../usr.bin/printf/printf.c	/^#define warnx(a, b, c) {						\\$/
wfree	func.c	/^wfree()$/
word	lex.c	/^word()$/
writef	csh.c	/^writef(oreo, buf, siz)$/
xecho	func.c	/^xecho(sep, v)$/
xechoit	exec.c	/^xechoit(t)$/
xset	set.c	/^xset(cp, vp)$/
