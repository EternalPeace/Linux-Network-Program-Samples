


MH-ALIAS(5)          BSD Programmer's Manual          MH-ALIAS(5)


NNAAMMEE
       mh-alias - alias file for MH message system

SSYYNNOOPPSSIISS
       any _M_H command

DDEESSCCRRIIPPTTIIOONN
       This  describes both _M_H personal alias files and the (pri-
       mary) alias file for mail delivery, the file

            /usr/contrib/mh-6.8/lib/MailAliases

       It does nnoott describe aliases files  used  by  the  message
       transport  system.   Each  line  of the alias file has the
       format:

            alias : address-group
       or
            alias ; address-group
       or
            < alias-file
       or
            ; comment

       where:

            address-group  :=  address-list
                        |   "<" file
                        |   "=" UNIX-group
                        |   "+" UNIX-group
                        |   "*"

            address-list   :=  address
                        |   address-list, address

       Continuation lines in alias files end with `\' followed by
       the newline character.

       Alias-file  and file are UNIX file names.  UNIX-group is a
       group name (or number) from _/_e_t_c_/_g_r_o_u_p.  An address  is  a
       "simple"  Internet-style  address.   Througout  this file,
       case is ignored, except for alias-file names.

       If the line starts with a `<', then the file  named  after
       the  `<'  is read for more alias definitions.  The reading
       is done recursively, so a `<' may occur in  the  beginning
       of an alias file with the expected results.

       If  the  address-group  starts  with  a `<', then the file
       named after the `<' is read and its contents are added  to
       the address-list for the alias.



[mh.6]                        MH.6.8                            1








MH-ALIAS(5)          BSD Programmer's Manual          MH-ALIAS(5)


       If  the  address-group  starts  with an `=', then the file
       _/_e_t_c_/_g_r_o_u_p is consulted for the UNIX-group named after the
       `='.   Each  login name occurring as a member of the group
       is added to the address-list for the alias.

       In contrast, if the address-group starts with a `+',  then
       the file _/_e_t_c_/_g_r_o_u_p is consulted to determine the group-id
       of the UNIX-group named after the `+'.   Each  login  name
       occurring  in the _/_e_t_c_/_p_a_s_s_w_d file whose group-id is indi-
       cated by this group is added to the address-list  for  the
       alias.

       If   the  address-group  is  simply  `*',  then  the  file
       _/_e_t_c_/_p_a_s_s_w_d is consulted and all login names with a userid
       greater  than some magic number (usually 200) are added to
       the address-list for the alias.

       In match, a trailing * on an alias will match  just  about
       anything appropriate.  (See example below.)

       An  approximation of the way aliases are resolved at post-
       ing time is (it's not really done this way):

            1) Build a list of all addresses from the message  to
            be delivered, eliminating duplicate addresses.

            2)  If  this draft originated on the local host, then
            for those addresses in the message that have no  host
            specified, perform alias resolution.

            3)  For  each line in the alias file, compare "alias"
            against all of the existing addresses.  If  a  match,
            remove the matched "alias" from the address list, and
            add each new address  in  the  address-group  to  the
            address  list  if it is not already on the list.  The
            alias  itself  is  not  usually  output,  rather  the
            address-group  that  the  alias  maps  to  is  output
            instead.  If "alias" is terminated with a `;' instead
            of  a  `:', then both the "alias" and the address are
            output in the correct format.   (This  makes  replies
            possible  since  _M_H  aliases and personal aliases are
            unknown to the mail transport system.)

       Since the alias file is read line by line, forward  refer-
       ences  work,  but  backward references are not recognized,
       thus, there is no recursion.








[mh.6]                        MH.6.8                            2








MH-ALIAS(5)          BSD Programmer's Manual          MH-ALIAS(5)


       EExxaammppllee::
            </usr/contrib/mh-6.8/lib/BBoardAliases
            sgroup: fred, fear, freida
            b-people: Blind List: bill, betty;
            fred: frated@UCI
            UNIX-committee: <unix.aliases
            staff: =staff
            wheels: +wheel
            everyone: *
            news.*: news

       The first line says that more aliases  should  immediately
       be           read          from          the          file
       _/_u_s_r_/_c_o_n_t_r_i_b_/_m_h_-_6_._8_/_l_i_b_/_B_B_o_a_r_d_A_l_i_a_s_e_s.   Following   this,
       "fred"  is  defined  as  an  alias  for  "frated@UCI", and
       "sgroup" is defined  as  an  alias  for  the  three  names
       "frated@UCI", "fear", and "freida".

       The  alias  "b-people"  is a blind list which includes the
       addresses "bill" and "betty"; the message will be delieved
       to those addresses, but the message header will  show only
       "Blind List: ;" (not the addresses).

       Next, the definition of "UNIX-committee" is given by read-
       ing  the  file  _u_n_i_x_._a_l_i_a_s_e_s  in  the  users _M_H directory,
       "staff" is defined as all users who are listed as  members
       of  the group "staff" in the _/_e_t_c_/_g_r_o_u_p file, and "wheels"
       is defined as all users whose group-id in  _/_e_t_c_/_p_a_s_s_w_d  is
       equivalent to the "wheel" group.

       Finally, "everyone" is defined as all users with a user-id
       in _/_e_t_c_/_p_a_s_s_w_d greater than 200, and all  aliases  of  the
       form "news.<anything>" are defined to be "news".

       The  key  thing to understand about aliasing in _M_H is that
       aliases in _M_H alias files are expanded into the headers of
       messages  posted.   This aliasing occurs first, at posting
       time, without the knowledge of the message transport  sys-
       tem.   In  contrast,  once the message transport system is
       given a message to deliver to a  list  of  addresses,  for
       each address that appears to be local, a system-wide alias
       file is consulted.  These aliases are  NNOOTT  expanded  into
       the headers of messages delivered.

HHEELLPPFFUULL HHIINNTTSS
       To use aliasing in _M_H quickly, do the following:

            First,  in  your  _._m_h___p_r_o_f_i_l_e, choose a name for your
            alias file, say "aliases", and add the line:

                 Aliasfile: aliases



[mh.6]                        MH.6.8                            3








MH-ALIAS(5)          BSD Programmer's Manual          MH-ALIAS(5)


            Second, create the file "aliases" in your  _M_H  direc-
            tory.

            Third, start adding aliases to your "aliases" file as
            appropriate.

FFIILLEESS
       /usr/contrib/mh-6.8/lib/MailAliases       Primary alias file

PPRROOFFIILLEE CCOOMMPPOONNEENNTTSS
       Aliasfile:           For a default alias file

SSEEEE AALLSSOO
       ali(1),  send(1),  whom(1),  group(5),   passwd(5),   con-
       flict(8), post(8)

DDEEFFAAUULLTTSS
       None

CCOONNTTEEXXTT
       None

HHIISSTTOORRYY
       In  previous  releases  of  _M_H, only a single, system-wide
       mh-alias file was supported.  This  led  to  a  number  of
       problems, since only mail-system administrators were capa-
       ble of (un)defining  aliases.   Hence,  the  semantics  of
       mh-alias  were  extended  to support personal alias files.
       Users of _M_H no longer need to bother mail-system  adminis-
       trators  for  keeping information in the system-wide alias
       file, as each _M_H user can create/modify/remove aliases  at
       will from any number of personal files.

BBUUGGSS
       Although  the  forward-referencing  semantics  of _m_h_-_a_l_i_a_s
       files prevent recursion, the  "< alias-file"  command  may
       defeat  this.   Since  the  number  of file descriptors is
       finite (and very limited), such  infinite  recursion  will
       terminate  with  a meaningless diagnostic when all the fds
       are used up.

       Forward references do  not  work  correctly  inside  blind
       lists.











[mh.6]                        MH.6.8                            4





