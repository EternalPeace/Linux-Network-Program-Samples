# 1 "dummy.c"
# 1 "/usr/include/sys/types.h" 1 3
 





































 
# 1 "/usr/include/machine/endian.h" 1 3
 





































 






 









# 1 "/usr/include/sys/cdefs.h" 1 3
 













































 











# 76 "/usr/include/sys/cdefs.h" 3


 
















# 56 "/usr/include/machine/endian.h" 2 3


 
unsigned long htonl (unsigned long)  ;
unsigned short htons (unsigned short)  ;
unsigned long ntohl (unsigned long)  ;
unsigned short ntohs (unsigned short)  ;
 

 






















# 40 "/usr/include/sys/types.h" 2 3



typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;
typedef unsigned long u_long;
typedef unsigned short ushort;   
typedef unsigned int uint;   


typedef unsigned long long u_quad_t;  
typedef long long quad_t;
typedef quad_t * qaddr_t;

typedef char *  caddr_t;  
typedef long  daddr_t;  
typedef unsigned long dev_t;   
typedef unsigned long fixpt_t;  
typedef unsigned long gid_t;   
typedef unsigned long ino_t;   
typedef unsigned short mode_t;   
typedef unsigned short nlink_t;  
typedef quad_t  off_t;   
typedef long  pid_t;   
typedef long  segsz_t;  
typedef long  swblk_t;  
typedef unsigned long uid_t;   

 





 
off_t  lseek (int, off_t, int)  ;
 








# 1 "/usr/include/machine/ansi.h" 1 3
 





































 

















 

















# 86 "/usr/include/sys/types.h" 2 3

# 1 "/usr/include/machine/types.h" 1 3
 






































typedef struct _physadr {
 short r[1];
} *physadr;

typedef struct label_t {    
 int val[15];
} label_t;


typedef u_long vm_offset_t;
typedef u_long vm_size_t;

 



typedef signed char     int8_t;
typedef unsigned char   u_int8_t;
typedef short     int16_t;
typedef unsigned short  u_int16_t;
typedef int     int32_t;
typedef unsigned int  u_int32_t;
typedef long long    int64_t;
typedef unsigned long long u_int64_t;


# 87 "/usr/include/sys/types.h" 2 3



typedef unsigned long   clock_t;




typedef unsigned int   size_t;




typedef int    ssize_t;




typedef long    time_t;






 









typedef long fd_mask;






typedef struct fd_set {
 fd_mask fds_bits[(((256 )+(( (sizeof(fd_mask) * 8  ) )-1))/( (sizeof(fd_mask) * 8  ) )) ];
} fd_set;







# 153 "/usr/include/sys/types.h" 3




# 1 "dummy.c" 2

# 1 "/usr/include/stddef.h" 1 3
 







































typedef int    ptrdiff_t;








typedef int    rune_t;

typedef int    wchar_t;










# 2 "dummy.c" 2

# 1 "/usr/include/stdarg.h" 1 3
 





































typedef char *va_list;



















# 3 "dummy.c" 2

# 1 "/usr/include/stdio.h" 1 3
 
























































 











typedef off_t fpos_t;








 





 
struct __sbuf {
 unsigned char *_base;
 int _size;
};

 

























typedef struct __sFILE {
 unsigned char *_p;  
 int _r;   
 int _w;   
 short _flags;   
 short _file;   
 struct __sbuf _bf;  
 int _lbfsize;  

  
 void *_cookie;  
 int (*_close) (void *)  ;
 int (*_read)  (void *, char *, int)  ;
 fpos_t (*_seek)  (void *, fpos_t, int)  ;
 int (*_write) (void *, const char *, int)  ;

  
 struct __sbuf _ub;  
 unsigned char *_up;  
 int _ur;   

  
 unsigned char _ubuf[3];  
 unsigned char _nbuf[1];  

  
 struct __sbuf _lb;  

  
 int _blksize;  
 fpos_t _offset;  
} FILE;

 
extern FILE __sF[];
 





  











 















 







 




















 


 
void  clearerr (FILE *)  ;
int  fclose (FILE *)  ;
int  feof (FILE *)  ;
int  ferror (FILE *)  ;
int  fflush (FILE *)  ;
int  fgetc (FILE *)  ;
int  fgetpos (FILE *, fpos_t *)  ;
char *fgets (char *, size_t, FILE *)  ;
FILE *fopen (const char *, const char *)  ;
int  fprintf (FILE *, const char *, ...)  ;
int  fputc (int, FILE *)  ;
int  fputs (const char *, FILE *)  ;
size_t  fread (void *, size_t, size_t, FILE *)  ;
FILE *freopen (const char *, const char *, FILE *)  ;
int  fscanf (FILE *, const char *, ...)  ;
int  fseek (FILE *, long, int)  ;
int  fsetpos (FILE *, const fpos_t *)  ;
long  ftell (const FILE *)  ;
size_t  fwrite (const void *, size_t, size_t, FILE *)  ;
int  getc (FILE *)  ;
int  getchar (void)  ;
char *gets (char *)  ;

extern int sys_nerr;    
extern const char *const sys_errlist[];

void  perror (const char *)  ;
int  printf (const char *, ...)  ;
int  putc (int, FILE *)  ;
int  putchar (int)  ;
int  puts (const char *)  ;
int  remove (const char *)  ;
int  rename  (const char *, const char *)  ;
void  rewind (FILE *)  ;
int  scanf (const char *, ...)  ;
void  setbuf (FILE *, char *)  ;
int  setvbuf (FILE *, char *, int, size_t)  ;
int  sprintf (char *, const char *, ...)  ;
int  sscanf (const char *, const char *, ...)  ;
FILE *tmpfile (void)  ;
char *tmpnam (char *)  ;
int  ungetc (int, FILE *)  ;
int  vfprintf (FILE *, const char *, char *   )  ;
int  vprintf (const char *, char *   )  ;
int  vsprintf (char *, const char *, char *   )  ;
 

 






 
char *ctermid (char *)  ;
FILE *fdopen (int, const char *)  ;
int  fileno (FILE *)  ;
 


 



 
char *fgetline (FILE *, size_t *)  ;
int  fpurge (FILE *)  ;
int  getw (FILE *)  ;
int  pclose (FILE *)  ;
FILE *popen (const char *, const char *)  ;
int  putw (int, FILE *)  ;
void  setbuffer (FILE *, char *, int)  ;
int  setlinebuf (FILE *)  ;
char *tempnam (const char *, const char *)  ;
int  snprintf (char *, size_t, const char *, ...)  ;
int  vsnprintf (char *, size_t, const char *, char *   )  ;
int  vscanf (const char *, char *   )  ;
int  vsscanf (const char *, const char *, char *   )  ;
FILE *zopen (const char *, const char *, int)  ;
 

 






 


 
FILE *funopen (const void *,
  int (*)(void *, char *, int),
  int (*)(void *, const char *, int),
  fpos_t (*)(void *, fpos_t, int),
  int (*)(void *))  ;
 




 


 
int __srget (FILE *)  ;
int __svfscanf (FILE *, const char *, char *   )  ;
int __swbuf (int, FILE *)  ;
 

 





static __inline int __sputc(int _c, FILE *_p) {
 if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
  return (*_p->_p++ = _c);
 else
  return (__swbuf(_c, _p));
}
# 355 "/usr/include/stdio.h" 3























# 4 "dummy.c" 2

# 1 "/usr/include/time.h" 1 3
 


























































struct tm {
 int tm_sec;   
 int tm_min;   
 int tm_hour;  
 int tm_mday;  
 int tm_mon;   
 int tm_year;  
 int tm_wday;  
 int tm_yday;  
 int tm_isdst;  
 long tm_gmtoff;  
 char *tm_zone;  
};



 
char *asctime (const struct tm *)  ;
clock_t clock (void)  ;
char *ctime (const time_t *)  ;
double difftime (time_t, time_t)  ;
struct tm *gmtime (const time_t *)  ;
struct tm *localtime (const time_t *)  ;
time_t mktime (struct tm *)  ;
size_t strftime (char *, size_t, const char *, const struct tm *)  ;
time_t time (time_t *)  ;


void tzset (void)  ;



char *timezone (int, int)  ;
void tzsetwall (void)  ;

 


# 5 "dummy.c" 2

# 1 "/usr/include/signal.h" 1 3
 







































# 1 "/usr/include/sys/signal.h" 1 3
 








































# 1 "/usr/include/machine/signal.h" 1 3
 


































 



typedef int sig_atomic_t;


# 1 "/usr/include/machine/trap.h" 1 3
 









































 























# 43 "/usr/include/machine/signal.h" 2 3



 






struct sigcontext {
 int sc_onstack;  
 int sc_mask;  
 int sc_sp;   
 int sc_fp;   
 int sc_ap;   
 int sc_pc;   
 int sc_ps;   
};
# 42 "/usr/include/sys/signal.h" 2 3
















































# 98 "/usr/include/sys/signal.h" 3







typedef unsigned int sigset_t;

 


struct sigaction {
 void (*sa_handler)();  
 sigset_t sa_mask;   
 int sa_flags;   
};










 










typedef void (*sig_t) (int)  ;  

 


struct sigaltstack {
 char *ss_base;   
 int ss_size;   
 int ss_flags;   
};



 



struct sigvec {
 void (*sv_handler)();  
 int sv_mask;   
 int sv_flags;   
};





 


struct sigstack {
 char *ss_sp;    
 int ss_onstack;   
};

 










 



 
void (*signal (int, void (*) (int)  )  ) (int)  ;
 

# 41 "/usr/include/signal.h" 2 3



extern const char *const sys_signame[32  ];
extern const char *const sys_siglist[32  ];


 
int raise (int)  ;

int kill (pid_t, int)  ;
int sigaction (int, const struct sigaction *, struct sigaction *)  ;
int sigaddset (sigset_t *, int)  ;
int sigdelset (sigset_t *, int)  ;
int sigemptyset (sigset_t *)  ;
int sigfillset (sigset_t *)  ;
int sigismember (const sigset_t *, int)  ;
int sigpending (sigset_t *)  ;
int sigprocmask (int, const sigset_t *, sigset_t *)  ;
int sigsuspend (const sigset_t *)  ;

int killpg (pid_t, int)  ;
int sigblock (int)  ;
int siginterrupt (int, int)  ;
int sigpause (int)  ;
int sigreturn (struct sigcontext *)  ;
int sigsetmask (int)  ;
int sigstack (const struct sigstack *, struct sigstack *)  ;
int sigvec (int, struct sigvec *, struct sigvec *)  ;
void psignal (unsigned int, const char *)  ;


 

 







# 6 "dummy.c" 2




typedef unsigned int Xsize_t;




typedef long int Xptrdiff_t;




typedef long int Xwchar_t;





int XBUFSIZ=1024  ;


int XFOPEN_MAX=20 ;


int XFILENAME_MAX=1024 ;

