# Host: Intel 386 running Solaris 2 (SVR4).

# Solaris-2 makes `install' optional in the Berkeley compatability pkg.
# cp will do fine.
INSTALL = cp

SYSV_DEFINE=-DSYSV
REGEX=regex.o
REGEX1=regex.o

# Need to compile and link in support for SVR4's /proc and i386 host dependent
# routines.
XDEPFILES= 

# Use the i386 SVR4 host configuration file.
XM_FILE= xm-i386v4.h

NAT_FILE= nm-i386v4.h
NATDEPFILES= corelow.o exec.o procfs.o fork-child.o i386v4-nat.o

# We need to find alloca() somewhere.  Gcc has one built in, but most other
# compilers don't.  Using the one in /usr/ucblib/libucb.a is tricky because
# we have to be careful not to pull in anything else from the library (lots
# of things are broken in most SVR4 versions).  The best solution is to just
# compile alloca.c and link it into the executable.  If we end up not needing
# it, then the code is just dead.  Once alloca.c moves to libiberty, then we
# can eliminate this semi-kludge.
ALLOCA=alloca.o
ALLOCA1=alloca.o

# SVR4 comes standard with terminfo, and in some implementations, the
# old termcap descriptions are incomplete.  So ensure that we use the
# new terminfo interface and latest terminal descriptions.
TERMCAP=-ltermlib
