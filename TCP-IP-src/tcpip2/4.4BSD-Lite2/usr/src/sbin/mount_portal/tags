ALLOC	conf.c	/^#define	ALLOC(ty)	(xmalloc(sizeof(ty)))$/
Mmount_portal	mount_portal.c	/^main(argc, argv)$/
activate	activate.c	/^void activate(q, so)$/
activate_argv	activate.c	/^static int activate_argv(pcr, key, v, so, fdp)$/
conf_match	conf.c	/^char **conf_match(q0, key)$/
conf_read	conf.c	/^void conf_read(q, conf)$/
get_request	activate.c	/^static int get_request(so, pcr, key, klen)$/
getmntopts	../mount/getmntopts.c	/^getmntopts(options, m0, flagp, altflagp)$/
ins_que	conf.c	/^static void ins_que(elem, pred)$/
palloc	conf.c	/^static path *palloc(cline, lno)$/
pfree	conf.c	/^static void pfree(p)$/
pinsert	conf.c	/^static int pinsert(p0, q0)$/
portal_exec	pt_exec.c	/^int portal_exec(pcr, key, v, so, fdp)$/
portal_file	pt_file.c	/^int portal_file(pcr, key, v, so, fdp)$/
portal_tcp	pt_tcp.c	/^int portal_tcp(pcr, key, v, kso, fdp)$/
preplace	conf.c	/^static void preplace(q0, xq)$/
readfp	conf.c	/^static void readfp(q0, fp)$/
regerror	conf.c	/^void regerror(s)$/
rem_que	conf.c	/^static void rem_que(elem)$/
send_reply	activate.c	/^static void send_reply(so, fd, error)$/
sigchld	mount_portal.c	/^static void sigchld(sig)$/
usage	mount_portal.c	/^usage()$/
xmalloc	conf.c	/^static void *xmalloc(siz)$/
