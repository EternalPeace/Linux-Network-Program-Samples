FSTRCMP	fsi_lex.c	/^#define FSTRCMP(p, q) ((*(p) == *(q)) ? strcmp((p)/
Mfsinfo	fsinfo.c	/^main(argc, argv)$/
YY_FATAL_ERROR	fsi_lex.c	/^#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )$/
YY_INPUT	fsi_lex.c	/^#define YY_INPUT(buf,result,max_size)		\\$/
YY_PROTO	fsi_lex.c	/^#define YY_PROTO(proto) proto$/
YY_SC_TO_UI	fsi_lex.c	/^#define YY_SC_TO_UI(c) ((unsigned int) (unsigned c/
YY_STATE_EOF	fsi_lex.c	/^#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + st/
analyze_automount	fsi_analyze.c	/^static void analyze_automount(ap)$/
analyze_automount_tree	fsi_analyze.c	/^static void analyze_automount_tree(q, pref, lvl)$/
analyze_automounts	fsi_analyze.c	/^void analyze_automounts(q)$/
analyze_dkmount_tree	fsi_analyze.c	/^static int analyze_dkmount_tree(q, parent, dk)$/
analyze_dkmounts	fsi_analyze.c	/^static int analyze_dkmounts(dk, q)$/
analyze_drives	fsi_analyze.c	/^static void analyze_drives(hp)$/
analyze_hosts	fsi_analyze.c	/^void analyze_hosts(q)$/
analyze_mounts	fsi_analyze.c	/^static void analyze_mounts(hp)$/
check_exportfs	fsi_analyze.c	/^static int check_exportfs(q, e)$/
col_cleanup	fsi_util.c	/^col_cleanup(eoj)$/
col_output	fsi_util.c	/^static int col_output(len)$/
compute_automount_point	fsi_util.c	/^void compute_automount_point(buf, hp, vn)$/
compute_hostpath	fsi_analyze.c	/^static char *compute_hostpath(hn)$/
current_location	fsi_lex.c	/^ioloc *current_location()$/
dict_add	fsi_dict.c	/^void dict_add(dp, k, v)$/
dict_add_data	fsi_dict.c	/^static void dict_add_data(de, v)$/
dict_hash	fsi_dict.c	/^static int dict_hash(k)$/
dict_iter	fsi_dict.c	/^int dict_iter(dp, fn)$/
dict_locate	fsi_dict.c	/^dict_ent *dict_locate(dp, k)$/
domain_strip	fsi_analyze.c	/^void domain_strip(otherdom, localdom)$/
error	fsi_util.c	/^void error(s, s1, s2, s3, s4)$/
fatal	fsi_util.c	/^void fatal(s, s1, s2, s3, s4)$/
find_fstab_type	wr_fstab.c	/^static struct os_fstab_type *find_fstab_type(hp)$/
find_resword	fsi_lex.c	/^static int find_resword(s)$/
find_username	fsinfo.c	/^static char *find_username()$/
find_volname	fsi_analyze.c	/^static dict_ent *find_volname(nn)$/
fixup_required_disk_info	fsi_analyze.c	/^static void fixup_required_disk_info(dp)$/
fixup_required_mount_info	fsi_analyze.c	/^static void fixup_required_mount_info(fp, de)$/
gen_hdr	fsi_util.c	/^void gen_hdr(ef, hn)$/
get_args	fsinfo.c	/^static void get_args(c, v)$/
info_hdr	fsi_util.c	/^void info_hdr(ef, info)$/
init_que	fsi_util.c	/^void init_que(q)$/
input	fsi_lex.c	/^#define input() xinput(1)$/
ins_que	fsi_util.c	/^void ins_que(elem, pred)$/
lerror	fsi_util.c	/^void lerror(l, s, s1, s2, s3, s4)$/
log	fsi_util.c	/^void log(s, s1, s2, s3, s4)$/
lwarning	fsi_util.c	/^void lwarning(l, s, s1, s2, s3, s4)$/
make_banner	fsi_util.c	/^static void make_banner(fp)$/
new_auto_tree	fsi_util.c	/^auto_tree *new_auto_tree(def, ap)$/
new_automount	fsi_util.c	/^automount *new_automount(name)$/
new_dict	fsi_dict.c	/^dict *new_dict()$/
new_dict_ent	fsi_dict.c	/^static dict_ent *new_dict_ent(k)$/
new_disk_fs	fsi_util.c	/^disk_fs *new_disk_fs()$/
new_ether_if	fsi_util.c	/^ether_if *new_ether_if()$/
new_fsmount	fsi_util.c	/^fsmount *new_fsmount()$/
new_host	fsi_util.c	/^host *new_host()$/
new_mount	fsi_util.c	/^mount *new_mount()$/
new_que	fsi_util.c	/^qelem *new_que()$/
pref_close	fsi_util.c	/^int pref_close(fp)$/
pref_open	fsi_util.c	/^FILE *pref_open(pref, hn, hdr, arg)$/
rem_que	fsi_util.c	/^void rem_que(elem)$/
set_disk_fs	fsi_util.c	/^void set_disk_fs(dp, k, v)$/
set_ether_if	fsi_util.c	/^void set_ether_if(ep,k, v)$/
set_fsmount	fsi_util.c	/^void set_fsmount(fp, k, v)$/
set_host	fsi_util.c	/^void set_host(hp, k, v)$/
set_mount	fsi_util.c	/^void set_mount(mp, k, v)$/
show_area_being_processed	fsi_util.c	/^void show_area_being_processed(area, n)$/
show_new	fsi_util.c	/^void show_new(msg)$/
show_required	fsi_analyze.c	/^static show_required(l, mask, info, hostname, stri/
show_total	fsi_util.c	/^static void show_total()$/
strdup	fsi_util.c	/^char *strdup(s)$/
unput	fsi_lex.c	/^#define unput(c) yyunput( c, yytext_ptr )$/
write_aix1_dkfstab	wr_fstab.c	/^static void write_aix1_dkfstab(ef, dp)$/
write_aix1_dkrmount	wr_fstab.c	/^static void write_aix1_dkrmount(ef, hn, fp)$/
write_aix3_dkfstab	wr_fstab.c	/^static void write_aix3_dkfstab(ef, dp)$/
write_aix3_dkrmount	wr_fstab.c	/^static void write_aix3_dkrmount(ef, hn, fp)$/
write_amount	wr_atab.c	/^static int write_amount(q, def)$/
write_amount_info	wr_atab.c	/^static int write_amount_info(af, ap, sk)$/
write_atab	wr_atab.c	/^write_atab(q)$/
write_boot_info	wr_bparam.c	/^static int write_boot_info(ef, hp)$/
write_bootparams	wr_bparam.c	/^int write_bootparams(q)$/
write_dkexports	wr_exportfs.c	/^static int write_dkexports(ef, q)$/
write_dkfstab	wr_fstab.c	/^static int write_dkfstab(ef, q, output)$/
write_dkrmount	wr_fstab.c	/^static int write_dkrmount(ef, q, hn, output)$/
write_dumpset	wr_dumpset.c	/^int write_dumpset(q)$/
write_dumpset_info	wr_dumpset.c	/^static int write_dumpset_info(ef, q)$/
write_export_info	wr_exportfs.c	/^static int write_export_info(ef, q, errors)$/
write_exportfs	wr_exportfs.c	/^int write_exportfs(q)$/
write_fstab	wr_fstab.c	/^int write_fstab(q)$/
write_generic_dkfstab	wr_fstab.c	/^static void write_generic_dkfstab(ef, dp)$/
write_generic_dkrmount	wr_fstab.c	/^static void write_generic_dkrmount(ef, hn, fp)$/
write_nfsname	wr_bparam.c	/^static int write_nfsname(ef, fp, hn)$/
write_ultrix_dkfstab	wr_fstab.c	/^static void write_ultrix_dkfstab(ef, dp)$/
write_ultrix_dkrmount	wr_fstab.c	/^static void write_ultrix_dkrmount(ef, hn, fp)$/
xcalloc	fsi_util.c	/^char *xcalloc(i, s)$/
xgetc	fsi_lex.c	/^#define xgetc(fp) ((iptr > ibuf) ? (*--iptr) : (la/
xinput	fsi_lex.c	/^static int xinput(need)$/
xmalloc	fsi_util.c	/^char *xmalloc(i)$/
xunput	fsi_lex.c	/^static void xunput(c)$/
yy_create_buffer	fsi_lex.c	/^YY_BUFFER_STATE yy_create_buffer( file, size )$/
yy_delete_buffer	fsi_lex.c	/^void yy_delete_buffer( b )$/
yy_fatal_error	fsi_lex.c	/^static void yy_fatal_error( msg )$/
yy_flex_alloc	fsi_lex.c	/^static void *yy_flex_alloc( size )$/
yy_flex_free	fsi_lex.c	/^static void yy_flex_free( ptr )$/
yy_flex_realloc	fsi_lex.c	/^static void *yy_flex_realloc( ptr, size )$/
yy_flex_strcpy	fsi_lex.c	/^static void yy_flex_strcpy( s1, s2 )$/
yy_get_next_buffer	fsi_lex.c	/^static int yy_get_next_buffer()$/
yy_get_previous_state	fsi_lex.c	/^static yy_state_type yy_get_previous_state()$/
yy_init_buffer	fsi_lex.c	/^void yy_init_buffer( b, file )$/
yy_pop_state	fsi_lex.c	/^static void yy_pop_state()$/
yy_push_state	fsi_lex.c	/^static void yy_push_state( new_state )$/
yy_switch_to_buffer	fsi_lex.c	/^void yy_switch_to_buffer( new_buffer )$/
yy_top_state	fsi_lex.c	/^static int yy_top_state()$/
yy_try_NUL_trans	fsi_lex.c	/^static yy_state_type yy_try_NUL_trans( yy_current_/
yyerror	fsi_lex.c	/^int yyerror(s, s1, s2, s3, s4)$/
yyless	fsi_lex.c	/^#define yyless(n) \\$/
yymore	fsi_lex.c	/^#define yymore() yymore_used_but_not_detected$/
yyparse	fsi_gram.c	/^yyparse()$/
yyrestart	fsi_lex.c	/^void yyrestart( input_file )$/
yyterminate	fsi_lex.c	/^#define yyterminate() return YY_NULL$/
yyunput	fsi_lex.c	/^static void yyunput( c, yy_bp )$/
yywrap	fsi_lex.c	/^int yywrap()$/
