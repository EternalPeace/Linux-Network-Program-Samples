FSCK(8)                   BSD System Manager's Manual                  FSCK(8)

NNAAMMEE
     ffsscckk - filesystem consistency check and interactive repair

SSYYNNOOPPSSIISS
     ffsscckk --pp [--mm _m_o_d_e]
     ffsscckk [--bb _b_l_o_c_k_#] [--cc _l_e_v_e_l] [--ll _m_a_x_p_a_r_a_l_l_e_l] [--yy] [--nn] [--mm _m_o_d_e]
          [_f_i_l_e_s_y_s_t_e_m] _._._.

DDEESSCCRRIIPPTTIIOONN
     The first form of ffsscckk preens a standard set of filesystems or the speci-
     fied filesystems.  It is normally used in the script _/_e_t_c_/_r_c during auto-
     matic reboot.  Here ffsscckk reads the table _/_e_t_c_/_f_s_t_a_b to determine which
     filesystems to check.  Only partitions in fstab that are mounted ``rw,''
     ``rq'' or ``ro'' and that have non-zero pass number are checked.
     Filesystems with pass number 1 (normally just the root filesystem) are
     checked one at a time.  When pass 1 completes, all remaining filesystems
     are checked, running one process per disk drive.  The disk drive contain-
     ing each filesystem is inferred from the longest prefix of the device
     name that ends in a digit; the remaining characters are assumed to be the
     partition designator.  In preening mode, filesystems that are marked
     clean are skipped.  Filesystems are marked clean when they are unmounted,
     when they have been mounted read-only, or when ffsscckk runs on them success-
     fully.

     The kernel takes care that only a restricted class of innocuous filesys-
     tem inconsistencies can happen unless hardware or software failures in-
     tervene.  These are limited to the following:
     Unreferenced inodes
     Link counts in inodes too large
     Missing blocks in the free map
     Blocks in the free map also in files
     Counts in the super-block wrong

     These are the only inconsistencies that ffsscckk with the --pp option will cor-
     rect; if it encounters other inconsistencies, it exits with an abnormal
     return status and an automatic reboot will then fail.  For each corrected
     inconsistency one or more lines will be printed identifying the filesys-
     tem on which the correction will take place, and the nature of the cor-
     rection.  After successfully correcting a filesystem, ffsscckk will print the
     number of files on that filesystem, the number of used and free blocks,
     and the percentage of fragmentation.

     If sent a QUIT signal, ffsscckk will finish the filesystem checks, then exit
     with an abnormal return status that causes an automatic reboot to fail.
     This is useful when you want to finish the filesystem checks during an
     automatic reboot, but do not want the machine to come up multiuser after
     the checks complete.

     Without the --pp option, ffsscckk audits and interactively repairs inconsistent
     conditions for filesystems.  If the filesystem is inconsistent the opera-
     tor is prompted for concurrence before each correction is attempted.  It
     should be noted that some of the corrective actions which are not cor-
     rectable under the --pp option will result in some loss of data.  The
     amount and severity of data lost may be determined from the diagnostic
     output.  The default action for each consistency correction is to wait
     for the operator to respond yes or no. If the operator does not have
     write permission on the filesystem ffsscckk will default to a --nn action.

     FFsscckk has more consistency checks than its predecessors _c_h_e_c_k, _d_c_h_e_c_k,
     _f_c_h_e_c_k, and _i_c_h_e_c_k combined.



     The following flags are interpreted by ffsscckk.

     --bb      Use the block specified immediately after the flag as the super
             block for the filesystem.  Block 32 is usually an alternate super
             block.

     --ll      Limit the number of parallel checks to the number specified in
             the following argument.  By default, the limit is the number of
             disks, running one process per disk.  If a smaller limit is giv-
             en, the disks are checked round-robin, one filesystem at a time.

     --mm      Use the mode specified in octal immediately after the flag as the
             permission bits to use when creating the _l_o_s_t_+_f_o_u_n_d directory
             rather than the default 1777.  In particular, systems that do not
             wish to have lost files accessible by all users on the system
             should use a more restrictive set of permissions such as 700.

     --yy      Assume a yes response to all questions asked by ffsscckk; this should
             be used with great caution as this is a free license to continue
             after essentially unlimited trouble has been encountered.

     --nn      Assume a no response to all questions asked by ffsscckk except for
             `CONTINUE?', which is assumed to be affirmative; do not open the
             filesystem for writing.

     --cc      Convert the filesystem to the specified level.  Note that the
             level of a filesystem can only be raised.  There are currently
             four levels defined:

             0       The filesystem is in the old (static table) format.

             1       The filesystem is in the new (dynamic table) format.

             2       The filesystem supports 32-bit uid's and gid's, short
                     symbolic links are stored in the inode, and directories
                     have an added field showing the file type.

             3       If maxcontig is greater than one, build the free segment
                     maps to aid in finding contiguous sets of blocks.  If
                     maxcontig is equal to one, delete any existing segment
                     maps.

             In interactive mode, ffsscckk will list the conversion to be made and
             ask whether the conversion should be done.  If a negative answer
             is given, no further operations are done on the filesystem.  In
             preen mode, the conversion is listed and done if possible without
             user interaction.  Conversion in preen mode is best used when all
             the filesystems are being converted at once.  The format of a
             filesystem can be determined from the first line of output from
             dumpfs(8).

     If no filesystems are given to ffsscckk then a default list of filesystems is
     read from the file _/_e_t_c_/_f_s_t_a_b.

     Inconsistencies checked are as follows:
     1.   Blocks claimed by more than one inode or the free map.
     2.   Blocks claimed by an inode outside the range of the filesystem.
     3.   Incorrect link counts.
     4.   Size checks:
          Directory size not a multiple of DIRBLKSIZ.
          Partially truncated file.
     5.   Bad inode format.
     6.   Blocks not accounted for anywhere.
     7.   Directory checks:


          File pointing to unallocated inode.
          Inode number out of range.
          Dot or dot-dot not the first two entries of a directory or having
          the wrong inode number.
     8.   Super Block checks:
          More blocks for inodes than there are in the filesystem.
          Bad free block map format.
          Total free block and/or free inode count incorrect.

     Orphaned files and directories (allocated but unreferenced) are, with the
     operator's concurrence, reconnected by placing them in the _l_o_s_t_+_f_o_u_n_d di-
     rectory.  The name assigned is the inode number.  If the _l_o_s_t_+_f_o_u_n_d di-
     rectory does not exist, it is created.  If there is insufficient space
     its size is increased.

     Because of inconsistencies between the block device and the buffer cache,
     the raw device should always be used.

FFIILLEESS
     /etc/fstab  contains default list of filesystems to check.

DDIIAAGGNNOOSSTTIICCSS
     The diagnostics produced by ffsscckk are fully enumerated and explained in
     Appendix A of _F_s_c_k _- _T_h_e _U_N_I_X _F_i_l_e _S_y_s_t_e_m _C_h_e_c_k _P_r_o_g_r_a_m.

SSEEEE AALLSSOO
     fstab(5),  fs(5),  fsdb(8),  newfs(8),  mkfs(8),  reboot(8)

4th Berkeley Distribution         May 9, 1995                                3
