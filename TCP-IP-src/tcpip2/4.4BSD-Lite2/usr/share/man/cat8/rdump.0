DUMP(8)                   BSD System Manager's Manual                  DUMP(8)

NNAAMMEE
     dduummpp - filesystem backup

SSYYNNOOPPSSIISS
     dduummpp [--00112233445566778899ccnnuu] [--BB _r_e_c_o_r_d_s] [--bb _b_l_o_c_k_s_i_z_e] [--dd _d_e_n_s_i_t_y] [--ff _f_i_l_e]
          [--hh _l_e_v_e_l] [--ss _f_e_e_t] [--TT _d_a_t_e] _f_i_l_e_s_y_s_t_e_m
     dduummpp [--WW | --ww]

     (The 4.3BSD option syntax is implemented for backward compatibility, but
     is not documented here.)

DDEESSCCRRIIPPTTIIOONN
     DDuummpp examines files on a filesystem and determines which files need to be
     backed up. These files are copied to the given disk, tape or other stor-
     age medium for safe keeping (see the --ff option below for doing remote
     backups).  A dump that is larger than the output medium is broken into
     multiple volumes.  On most media the size is determined by writing until
     an end-of-media indication is returned.  On media that cannot reliably
     return an end-of-media indication (such as some cartridge tape drives)
     each volume is of a fixed size; the actual size is determined by the tape
     size and density and/or block count options below.  By default, the same
     output file name is used for each volume after prompting the operator to
     change media.

     The following options are supported by dduummpp:

     --00--99    Dump levels.  A level 0, full backup, guarantees the entire file
             system is copied (but see also the --hh option below).  A level
             number above 0, incremental backup, tells dump to copy all files
             new or modified since the last dump of the same or lower level.
             The default level is 9.

     --BB _r_e_c_o_r_d_s
             The number of dump records per volume.  This option overrides the
             calculation of tape size based on length and density.

     --bb _b_l_o_c_k_s_i_z_e
             The number of kilobytes per dump record.

     --cc      Modify the calculation of the default density and tape size to be
             more appropriate for cartridge tapes.

     --dd _d_e_n_s_i_t_y
             Set tape density to _d_e_n_s_i_t_y. The default is 1600BPI.

     --ff _f_i_l_e
             Write the backup to _f_i_l_e; _f_i_l_e may be a special device file like
             _/_d_e_v_/_r_m_t_1_2 (a tape drive), _/_d_e_v_/_r_s_d_1_c (a disk drive), an ordinary
             file, or `--' (the standard output).  Multiple file names may be
             given as a single argument separated by commas.  Each file will
             be used for one dump volume in the order listed; if the dump re-
             quires more volumes than the number of names given, the last file
             name will used for all remaining volumes after prompting for me-
             dia changes.  If the name of the file is of the form
             ``host:file'', or ``user@host:file'', dduummpp writes to the named
             file on the remote host using rmt(8).

     --hh _l_e_v_e_l
             Honor the user ``nodump'' flag only for dumps at or above the
             given _l_e_v_e_l. The default honor level is 1, so that incremental
             backups omit such files but full backups retain them.

     --nn      Whenever dduummpp requires operator attention, notify all operators

             in the group ``operator'' by means similar to a wall(1).

     --ss _f_e_e_t
             Attempt to calculate the amount of tape needed at a particular
             density.  If this amount is exceeded, dduummpp prompts for a new
             tape.  It is recommended to be a bit conservative on this option.
             The default tape length is 2300 feet.

     --TT _d_a_t_e
             Use the specified date as the starting time for the dump instead
             of the time determined from looking in _/_e_t_c_/_d_u_m_p_d_a_t_e_s. The format
             of date is the same as that of ctime(3).  This option is useful
             for automated dump scripts that wish to dump over a specific pe-
             riod of time.  The --TT option is mutually exclusive from the --uu
             option.

     --uu      Update the file _/_e_t_c_/_d_u_m_p_d_a_t_e_s after a successful dump.  The for-
             mat of _/_e_t_c_/_d_u_m_p_d_a_t_e_s is readable by people, consisting of one
             free format record per line: filesystem name, increment level and
             ctime(3) format dump date.  There may be only one entry per
             filesystem at each level.  The file _/_e_t_c_/_d_u_m_p_d_a_t_e_s may be edited
             to change any of the fields, if necessary.

     --WW      DDuummpp tells the operator what file systems need to be dumped.
             This information is gleaned from the files _/_e_t_c_/_d_u_m_p_d_a_t_e_s and
             _/_e_t_c_/_f_s_t_a_b. The --WW option causes dduummpp to print out, for each file
             system in _/_e_t_c_/_d_u_m_p_d_a_t_e_s the most recent dump date and level, and
             highlights those file systems that should be dumped.  If the --WW
             option is set, all other options are ignored, and dduummpp exits im-
             mediately.

     --ww      Is like W, but prints only those filesystems which need to be
             dumped.

     DDuummpp requires operator intervention on these conditions: end of tape, end
     of dump, tape write error, tape open error or disk read error (if there
     are more than a threshold of 32).  In addition to alerting all operators
     implied by the --nn key, dduummpp interacts with the operator on _d_u_m_p_'_s control
     terminal at times when dduummpp can no longer proceed, or if something is
     grossly wrong.  All questions dduummpp poses _m_u_s_t be answered by typing
     ``yes'' or ``no'', appropriately.

     Since making a dump involves a lot of time and effort for full dumps,
     dduummpp checkpoints itself at the start of each tape volume.  If writing
     that volume fails for some reason, dduummpp will, with operator permission,
     restart itself from the checkpoint after the old tape has been rewound
     and removed, and a new tape has been mounted.

     DDuummpp tells the operator what is going on at periodic intervals, including
     usually low estimates of the number of blocks to write, the number of
     tapes it will take, the time to completion, and the time to the tape
     change.  The output is verbose, so that others know that the terminal
     controlling dduummpp is busy, and will be for some time.

     In the event of a catastrophic disk event, the time required to restore
     all the necessary backup tapes or files to disk can be kept to a minimum
     by staggering the incremental dumps.  An efficient method of staggering
     incremental dumps to minimize the number of tapes follows:

           ++oo   Always start with a level 0 backup, for example:

                     /sbin/dump -0u -f /dev/nrst1 /usr/src

               This should be done at set intervals, say once a month or once
               every two months, and on a set of fresh tapes that is saved

               forever.

           ++oo   After a level 0, dumps of active file systems are taken on a
               daily basis, using a modified Tower of Hanoi algorithm, with
               this sequence of dump levels:

                     3 2 5 4 7 6 9 8 9 9 ...

               For the daily dumps, it should be possible to use a fixed num-
               ber of tapes for each day, used on a weekly basis.  Each week,
               a level 1 dump is taken, and the daily Hanoi sequence repeats
               beginning with 3.  For weekly dumps, another fixed set of tapes
               per dumped file system is used, also on a cyclical basis.

     After several months or so, the daily and weekly tapes should get rotated
     out of the dump cycle and fresh tapes brought in.

FFIILLEESS
     /dev/rmt8       default tape unit to dump to
     /etc/dumpdates  dump date records
     /etc/fstab      dump table: file systems and frequency
     /etc/group      to find group _o_p_e_r_a_t_o_r

SSEEEE AALLSSOO
     restore(8),  rmt(8),  dump(5),  fstab(5)

DDIIAAGGNNOOSSTTIICCSS
     Many, and verbose.

     Dump exits with zero status on success.  Startup errors are indicated
     with an exit code of 1; abnormal termination is indicated with an exit
     code of 3.

BBUUGGSS
     Fewer than 32 read errors on the filesystem are ignored.

     Each reel requires a new process, so parent processes for reels already
     written just hang around until the entire tape is written.

     DDuummpp with the --WW or --ww options does not report filesystems that have nev-
     er been recorded in _/_e_t_c_/_d_u_m_p_d_a_t_e_s, even if listed in _/_e_t_c_/_f_s_t_a_b.

     It would be nice if dduummpp knew about the dump sequence, kept track of the
     tapes scribbled on, told the operator which tape to mount when, and pro-
     vided more assistance for the operator running restore.

HHIISSTTOORRYY
     A dduummpp command appeared in Version 6 AT&T UNIX.

4th Berkeley Distribution         May 1, 1995                                3
