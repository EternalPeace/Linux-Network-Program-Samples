UNDELETE(2)                 BSD Programmer's Manual                UNDELETE(2)

NNAAMMEE
     uunnddeelleettee - attempt to recover a deleted file

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>

     _i_n_t
     uunnddeelleettee(_c_o_n_s_t _c_h_a_r _*_p_a_t_h);

DDEESSCCRRIIPPTTIIOONN
     The uunnddeelleettee() function attempts to recover the deleted file named by
     _p_a_t_h. Currently, this works only when the named object is a whiteout in a
     union filesystem.  The system call removes the whiteout causing any ob-
     jects in a lower layer of the union stack to become visible once more.

     Eventually, the uunnddeelleettee functionality may be expanded to other filesys-
     tems able to recover deleted files such as the log-structured filesystem.

RREETTUURRNN VVAALLUUEESS
     Upon successful completion, a value of 0 is returned.  Otherwise, a value
     of -1 is returned and _e_r_r_n_o is set to indicate the error.

EERRRROORRSS
     The uunnddeelleettee() succeeds unless:

     [ENOTDIR]       A component of the path prefix is not a directory.

     [EINVAL]        The pathname contains a character with the high-order bit
                     set.

     [ENAMETOOLONG]  A component of a pathname exceeded 255 characters, or an
                     entire path name exceeded 1023 characters.

     [EEXIST]        The path does not reference a whiteout.

     [ENOENT]        The named whiteout does not exist.

     [EACCES]        Search permission is denied for a component of the path
                     prefix.

     [EACCES]        Write permission is denied on the directory containing
                     the name to be undeleted.

     [ELOOP]         Too many symbolic links were encountered in translating
                     the pathname.

     [EPERM]         The directory containing the name is marked sticky, and
                     the containing directory is not owned by the effective
                     user ID.

     [EIO]           An I/O error occurred while updating the directory entry.

     [EROFS]         The name resides on a read-only file system.

     [EFAULT]        _P_a_t_h points outside the process's allocated address
                     space.

SSEEEE AALLSSOO
     unlink(2),  mount_union(8)

HHIISSTTOORRYY
     An uunnddeelleettee function call first appeared in 4.4BSD-Lite.

4th Berkeley Distribution      October 18, 1994                              1
