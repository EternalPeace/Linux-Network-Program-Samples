DIFF(1)                      BSD Reference Manual                      DIFF(1)

NNAAMMEE
     ddiiffff - differential file and directory comparator

SSYYNNOOPPSSIISS
     ddiiffff [--cceeffhhnn] [--bbiiwwtt] _f_i_l_e_1 _f_i_l_e_2
     ddiiffff [--DD_s_t_r_i_n_g] [--bbiiww] _f_i_l_e_1 _f_i_l_e_2
     ddiiffff [--ll] [--rr] [--ss] [--cceeffhhnn] [--bbiiwwtt] [--SS_n_a_m_e] _d_i_r_1 _d_i_r_2

DDEESSCCRRIIPPTTIIOONN
     The ddiiffff utility compares the contents of _f_i_l_e_1 and _f_i_l_e_2 and writes to
     the standard output the list of changes necessary to convert one file in-
     to the other.  No output is produced if the files are identical.

     Output options (mutually exclusive):

     --cc      produces a diff with lines of context.  The default is to present
             3 lines of context and may be changed, e.g., to 10, by --cc1100. With
             --cc the output format is modified slightly: the output beginning
             with identification of the files involved and their creation
             dates and then each change is separated by a line with a dozen
             *'s.  The lines removed from _f_i_l_e_1 are marked with `- '; those
             added to _f_i_l_e_2 are marked `+ '.  Lines which are changed from one
             file to the other are marked in both files with `! '.  Changes
             which lie within <context> lines of each other are grouped to-
             gether on output.  (This is a change from the previous ``diff
             -c'' but the resulting output is usually much easier to inter-
             pret.)

     --ee      produces output in a form suitable as input for the editor utili-
             ty, ed(1),  which can then be used to convert file1 into file2.

             Extra commands are added to the output when comparing directories
             with --ee, so that the result is a sh(1) script for converting text
             files which are common to the two directories from their state in
             _d_i_r_1 to their state in _d_i_r_2.

     --ff      identical output to that of the --ee flag, but in reverse order.
             It cannot be digested by ed(1).

     --hh      Invokes an alternate algorithm which can handle files of very
             long lengths.  There is a trade off. The algorithm can only deal
             with changes which are clearly delimited and brief. Long sections
             of changes and overlaps will confuse it.

     --nn      produces a script similar to that of --ee, but in the opposite or-
             der and with a count of changed lines on each insert or delete
             command.  This is the form used by rcsdiff(1).

     --DD_s_t_r_i_n_g
             creates a merged version of _f_i_l_e_1 and _f_i_l_e_2 on the standard out-
             put, with C preprocessor controls included so that a compilation
             of the result without defining _s_t_r_i_n_g is equivalent to compiling
             _f_i_l_e_1, while defining _s_t_r_i_n_g will yield _f_i_l_e_2.

     Comparison options:

     --bb      causes trailing blanks (spaces and tabs) to be ignored, and other
             strings of blanks to compare equal.

     --ii      ignores the case of letters.  E.g., ``A'' will compare equal to
             ``a''.

     --tt      will expand tabs in output lines.  Normal or --cc output adds char-
             acter(s) to the front of each line which may screw up the inden-
             tation of the original source lines and make the output listing
             difficult to interpret.  This option will preserve the original
             source's indentation.

     --ww      is similar to --bb but causes whitespace (blanks and tabs) to be
             totally ignored.  E.g., ``if ( a == b )'' will compare equal to
             ``if(a==b)''.

     Directory comparison options:

     --ll      long output format; each text file ddiiffff'd is piped through pr(1)
             to paginate it, other differences are remembered and summarized
             after all text file differences are reported.

     --rr      causes application of ddiiffff recursively to common subdirectories
             encountered.

     --ss      causes ddiiffff to report files which are the same, which are other-
             wise not mentioned.

     --SS_n_a_m_e  re-starts a directory ddiiffff in the middle beginning with file
             _n_a_m_e.

     If both arguments are directories, ddiiffff sorts the contents of the direc-
     tories by name, and then runs the regular file ddiiffff algorithm, producing
     a change list, on text files which are different.  Binary files which
     differ, common subdirectories, and files which appear in only one direc-
     tory are described as such.

     If only one of _f_i_l_e_1 and _f_i_l_e_2 is a directory, ddiiffff is applied to the
     non-directory file and the file contained in the directory file with a
     filename that is the same as the last component of the non-directory
     file.

     If either _f_i_l_e_1 or _f_i_l_e_2 is `--', the standard input is used in its place.

   OOuuttppuutt SSttyyllee
     The default (without --ee, --cc, or --nn options) output contains lines of
     these forms, where _X_X, _Y_Y, _Z_Z, _Q_Q are line numbers respective of file or-
     der.

     XXaaYY        At (the end of) line _X_X of _f_i_l_e_1, append the contents of
                  line _Y_Y of _f_i_l_e_2 to make them equal.
     XXaaYY,ZZ     Same as above, but append the range of lines, _Y_Y through _Z_Z
                  of _f_i_l_e_2 to line _X_X of file1.
     XXddYY        At line _X_X delete the line. The value _Y_Y tells to which line
                  the change would bring _f_i_l_e_1 in line with _f_i_l_e_1.
     XX,YYddZZ     Delete the range of lines _X_X through _Y_Y in _f_i_l_e_1.
     XXccYY        Change the line _X_X in _f_i_l_e_1 to the line _Y_Y in _f_i_l_e_2_.
     XX,YYccZZ     Replace the range of specified lines with the line _Z_Z.
     XX,YYccZZ,QQ  Replace the range _X_X,YY from _f_i_l_e_1 with the range _Z_Z,QQ from
                  _f_i_l_e_2.

     These lines resemble ed(1) subcommands to convert _f_i_l_e_1 into _f_i_l_e_2. The
     line numbers before the action letters pertain to _f_i_l_e_1; those after per-
     tain to _f_i_l_e_2. Thus, by exchanging aa for dd and reading the line in re-
     verse order, one can also determine how to convert _f_i_l_e_2 into _f_i_l_e_1. As
     in ed(1),  identical pairs (where num1 = num2) are abbreviated as a sin-
     gle number.

EENNVVIIRROONNMMEENNTT
     TMPDIR  If the environment variable TMPDIR exists, ddiiffff will use the di-
             rectory specified by TMPDIR as the temporary directory.

FFIILLEESS

     /tmp/d?????
     /usr/bin/diffh  Alternate algorithm version (used by option --hh).
     /usr/bin/diff   for directory diffs
     /usr/bin/pr     used by the --ll option.

SSEEEE AALLSSOO
     cmp(1),  cc(1),  comm(1),  ed(1),  diff3(1)

DDIIAAGGNNOOSSTTIICCSS
     The ddiiffff utility exits with one of the following values:

           0       No differences were found.
           1       Differences were found.
           >1      An error occurred.

BBUUGGSS
     The --ff and --ee options do not provide special handling for lines on which
     the first and only character is ``.''. This can cause problems for ed(1).


     When comparing directories with the --bb, --ww or --ii options specified, ddiiffff
     first compares the files ala _c_m_p, and then decides to run the ddiiffff algo-
     rithm if they are not equal.  This may cause a small amount of spurious
     output if the files then turn out to be identical because the only dif-
     ferences are insignificant white space or case differences.

HHIISSTTOORRYY
     A ddiiffff command appeared in Version 6 AT&T UNIX.

4th Berkeley Distribution        June 30, 1993                               3
