KVM_OPEN(3)                 BSD Programmer's Manual                KVM_OPEN(3)

NNAAMMEE
     kkvvmm__ooppeenn, kkvvmm__ooppeennffiilleess, kkvvmm__cclloossee - initialize kernel virtual memory ac-
     cess

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ffccnnttll..hh>>
     ##iinncclluuddee <<kkvvmm..hh>>

     _k_v_m___t _*
     kkvvmm__ooppeenn(_c_o_n_s_t _c_h_a_r _*_e_x_e_c_f_i_l_e, _c_o_n_s_t _c_h_a_r _*_c_o_r_e_f_i_l_e, _c_h_a_r _*_s_w_a_p_f_i_l_e,
             _i_n_t _f_l_a_g_s, _c_o_n_s_t _c_h_a_r _*_e_r_r_s_t_r);

     _k_v_m___t _*
     kkvvmm__ooppeennffiilleess(_c_o_n_s_t _c_h_a_r _*_e_x_e_c_f_i_l_e, _c_o_n_s_t _c_h_a_r _*_c_o_r_e_f_i_l_e, _c_h_a_r _*_s_w_a_p_f_i_l_e,
             _i_n_t _f_l_a_g_s, _c_h_a_r _*_e_r_r_b_u_f);

     _i_n_t
     kkvvmm__cclloossee(_k_v_m___t _*_k_d);

DDEESSCCRRIIPPTTIIOONN
     The functions kkvvmm__ooppeenn() and kkvvmm__ooppeennffiilleess() return a descriptor used to
     access kernel virtual memory via the kvm(3) library routines.  Both ac-
     tive kernels and crash dumps are accessible through this interface.

     _e_x_e_c_f_i_l_e is the executable image of the kernel being examined.  This file
     must contain a symbol table.  If this argument is NULL, the currently
     running system is assumed, which is indicated by _PATH_UNIX in <paths.h>.

     _c_o_r_e_f_i_l_e is the kernel memory device file.  It can be either /dev/mem or
     a crash dump core generated by savecore(8).  If _c_o_r_e_f_i_l_e is NULL, the de-
     fault indicated by _PATH_MEM from <paths.h> is used.

     _s_w_a_p_f_i_l_e should indicate the swap device.  If NULL, _PATH_DRUM from
     <paths.h> is used.

     The _f_l_a_g_s argument indicates read/write access as in open(2) and applies
     only to the core file.  Only O_RDONLY, O_WRONLY, and O_RDWR are permit-
     ted.

     There are two open routines which differ only with respect to the error
     mechanism.  One provides backward compatibility with the SunOS kvm li-
     brary, while the other provides an improved error reporting framework.

     The kkvvmm__ooppeenn() function is the Sun kvm compatible open call.  Here, the
     _e_r_r_s_t_r argument indicates how errors should be handled.  If it is NULL,
     no errors are reported and the application cannot know the specific na-
     ture of the failed kvm call.  If it is not NULL, errors are printed to
     stderr with _e_r_r_s_t_r prepended to the message, as in perror(3).  Normally,
     the name of the program is used here.  The string is assumed to persist
     at least until the corresponding kkvvmm__cclloossee() call.

     The kkvvmm__ooppeennffiilleess() function provides BSD style error reporting.  Here,
     error messages are not printed out by the library.  Instead, the applica-
     tion obtains the error message corresponding to the most recent kvm li-
     brary call using kkvvmm__ggeetteerrrr() (see kvm_geterr(3)).  The results are unde-
     fined if the most recent kvm call did not produce an error.  Since
     kkvvmm__ggeetteerrrr() requires a kvm descriptor, but the open routines return NULL
     on failure, kkvvmm__ggeetteerrrr() cannot be used to get the error message if open
     fails.  Thus, kkvvmm__ooppeennffiilleess() will place any error message in the _e_r_r_b_u_f
     argument.  This buffer should be _POSIX2_LINE_MAX characters large (from
     <limits.h>).

RREETTUURRNN VVAALLUUEESS
     The kkvvmm__ooppeenn() and kkvvmm__ooppeennffiilleess() functions both return a descriptor to
     be used in all subsequent kvm library calls.  The library is fully re-
     entrant.  On failure, NULL is returned, in which case kkvvmm__ooppeennffiilleess()
     writes the error message into _e_r_r_b_u_f.

     The kkvvmm__cclloossee() function returns 0 on success and -1 on failure.

BBUUGGSS
     There should not be two open calls.  The ill-defined error semantics of
     the Sun library and the desire to have a backward-compatible library for
     BSD left little choice.

SSEEEE AALLSSOO
     open(2),  kvm(3),  kvm_getargv(3),  kvm_getenvv(3),  kvm_geterr(3),
     kvm_getprocs(3),  kvm_nlist(3),  kvm_read(3),  kvm_write(3)

4.4BSD                          April 19, 1994                               2
